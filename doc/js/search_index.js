var search_data = {"index":{"searchIndex":["abonnement","abonnementtest","abonnements","abonnements","paliers","account","accounttest","accountscontroller","accountscontrollertest","accountshelper","accountstest","activesupport","testcase","agent","agenttest","agentcrtlcontroller","agentcrtlcontrollertest","agentcrtlhelper","agents","auth","search","sessionscontroller","answer","answertest","api","v1","agentcontroller","apicontroller","customercontroller","sessioncontroller","apimailer","apimailerpreview","apimailertest","app","messages","authentication","errors","signup","success","paymequick","app","applicationcable","channel","connection","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationrecord","applicationsystemtestcase","auth","await","awaittest","badge","badgetest","cat","cattest","categorie","categorieservice","categorieservicetest","categorieservicescontroller","categorieservicescontrollertest","categorieserviceshelper","categorieservicestest","categorietest","categoriescontroller","categoriescontrollertest","categorieshelper","categoriestest","catscontroller","catscontrollertest","catshelper","catstest","client","clientcontroller","clientcontrollertest","clienthelper","commission","commissiontest","contactform","customer","customerclient","client","paywithcode","customerdatum","customerdatumtest","customerdesktop","client","customertest","demouser","demouseraccount","demouseraccounttest","demousertest","distancematrix","distancematrix","entreprise","entreprise","manage","sms","eu","euapi","eupartner","external","demousers","fraud","customer","security","gestionentreprise","agence","entreprise","user","history","historytest","homecontroller","homecontrollertest","homehelper","journal","journal","journaldepot","journalretrait","journaleentreprise","logger","logstory","histo","lorem","messages","object","onesignal","onesignalsend","sendemailapi","p","authenticate","authorize","guichet","search","palier","paliertest","parametre","authentication","cleanaccounts","crypto","forgotpassword","parametre","personaldata","profiles","security","securityquestion","ussd","parametrescontroller","parametrescontrollertest","parametreshelper","partenaire","authenticate","authorize","guichet","search","partner","partnertest","partnersplateform","client","partner","paylib","customerpaymentsolution","paymentsolution","paymequick","payment","popcash","application","rack","qrmodel","qrmodeltest","question","questiontest","role","roletest","rolescontroller","rolescontrollertest","roleshelper","rolestest","service","servicetest","servicescontroller","servicescontrollertest","serviceshelper","servicestest","setaccount","sms","smspassword","smspasswordtest","sprintpay","check","checkphone","pay","payment","v2","sp","transaction","transactiontest","transactions","type","typetest","typescontroller","typescontrollertest","typeshelper","typestest","user","usertest","userscontroller","userscontrollertest","usershelper","userstest","verifycontroller","verifycontrollertest","verifyhelper","welcomecontroller","welcomecontrollertest","payment()","account()","activate_customer()","activate_customer()","activate_customer_account()","activate_customer_intent()","add()","add()","add()","add()","aesencode()","agence()","agis_percentage()","amount()","apikey()","apikey_request()","app()","app_id()","attemp_login()","attemp_signin()","attemp_signup()","authnewuuiddevice()","auth_top()","authenticate()","authorization()","authorize()","authorize()","balance()","cameroun()","cancelretrait()","cancel_retrait()","cashin()","check()","check()","check()","checkheader()","checkphone()","checkretraitfail()","checktoken()","check_retrait()","check_retrait()","check_retrait_refactoring()","choose_layout()","code()","code_signin()","commission()","complete_name()","complete_name()","compte()","confirm_signin()","confirmation()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","createeupartner()","createeum()","create_entreprise()","create_logs_transaction()","create_qrcode()","create_structure()","create_user()","create_user_account()","created()","credit()","credit()","credit()","credit()","crediteum()","credit_customer()","credit_customer()","cryptossl()","current()","customer()","customer_account_amount()","customer_activity()","customer_can_pay?()","customer_has_money_for_transaction?()","daily_news()","debit()","debit()","debit()","debit_client()","debit_customer()","debit_customer_account()","debit_user_account()","decrypt()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","deleteeum()","demo_merchant_reached_daily_amount_limit?()","demo_merchant_reached_dayly_transaction_count_limit?()","demo_merchant_reached_monthly_amount_limit?()","demo_merchant_reached_monthly_transaction_count_limit?()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","detailcategorie()","developer()","device()","devise()","duration()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","encaisser()","encode()","errors()","evolve()","find_client()","find_marchand()","formatlogger()","generalnotification()","generate()","generateqrcode()","generate_code()","genericonesignal()","geocoder_search()","getaccountbalance()","getpaymentstatus()","getphonenumber()","getsoldecustomer()","getspdata()","get_account()","get_all_question()","get_balance()","get_balance()","get_balance_retrait()","get_customer()","get_customer()","get_distance()","get_entreprise()","get_entreprise_account()","get_question()","get_user_history()","h_customer()","h_interval()","hashamount()","headers()","histo()","histodetail()","historique()","historique()","history()","history()","history()","history()","historybydate()","historylog()","history_period()","home()","includekey()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","inialize()","init_retrait()","intend_qrcode()","intent_credit_customer()","intent_debit_customer()","intent_new_customer()","isfraud?()","islock?()","is_await_valid?()","is_complete?()","is_customer?()","is_enterprise_exist?()","is_user_exist?()","journal()","journal()","journal()","key()","keys()","lang()","lastcnichar()","limit()","limitloginattempt()","link()","list()","list()","list()","lock()","lock()","lock()","lock()","lock()","lock()","lock()","lock()","lockcustomeraccount()","lockcustomeraccount()","lock_customer_account()","log_login()","login()","maps()","merchant_can_receive?()","merchant_is_demo_user?()","message()","montantinferieur()","mppp()","mtn()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_alerte()","new_customer()","new_customer()","new_customer()","new_qrcode()","nexah()","notpaytome()","notify()","notifyadmin()","notifyadmin()","numerocameroun()","numerooperateurmobile()","om()","orange()","p()","parameters()","particulier()","partnerauthenticate()","partner_customer()","partner_verify()","password()","passwordvalidation()","pay()","pay()","pay()","pay()","payussd()","payment()","payment()","payment()","pays()","phonepayment()","prettycallsexe()","private()","processfinalize()","public()","qrcode()","qrcode()","query()","question()","rapprochement()","read()","rechargesprintpay()","recovery()","register()","register()","release()","resend()","resetpassword()","resetpassword()","result()","result_unlock()","retrait()","retraitonesignal()","retrait_intend()","retrieve_password()","retrivepassword()","savehistory()","search()","search()","search()","search()","searchcontext()","searchcustomerbyphone()","searchguichet()","searchguichet()","searchoperator()","searchoperator()","searchqrcodebyscan()","searchqrcodebycode()","search_customer()","search_phone()","secure3d()","send()","send()","send()","sendadmin()","sendemail()","sendnotification()","sendpaymentrequest()","send_push()","sender()","service()","servicecategorie()","setcommission()","setmontantaretirer()","setpersonaldata()","setsecurityquestion()","show()","show()","show()","show()","show()","show()","show()","show()","signied()","signin()","signin()","signin()","signin()","signin()","signin()","signin()","signin()","signing()","signup()","signup()","signup()","signup()","signup()","signup()","signup()","signup()","signupfail()","signup_authentication()","sms_to_many()","solde()","soldefinale()","soldetest()","sp()","struture_params()","success()","suspend()","system!()","testnetwork()","texteuapi()","transaction()","transaction()","transfert()","un_hash()","unlock()","unlock()","unlock()","unlock()","unlock()","unlockcustomeraccount()","unlock_customer_account()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","updateaccount()","updatedevice()","updatepassword()","update_account_client()","update_account_marchand()","utilisateur()","validate_lock_customer_account()","validate_otp()","validate_retrait()","validate_retrait()","validate_signin()","verify()","verifyphone()","verify_amount()","virtualsp()","webview()","gemfile","gemfile.lock","readme","rakefile","jeu_test","_account.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_categorie_service.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_category.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_cat.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_role.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_service.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_type.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_user.json.jbuilder","index.json.jbuilder","show.json.jbuilder","config.ru","credentials.yml.enc","git","scheduler.rake","client.log","development.log","lorem.log","payment.log","production.log","push.log","test.log","package-lock.json","package.json","404.html","422.html","500.html","apple-touch-icon-precomposed.png","apple-touch-icon.png","favicon.ico","robots","rake","report.html","sendgrid.env","development_secret","restart"],"longSearchIndex":["abonnement","abonnementtest","abonnements","abonnements::abonnements","abonnements::paliers","account","accounttest","accountscontroller","accountscontrollertest","accountshelper","accountstest","activesupport","activesupport::testcase","agent","agenttest","agentcrtlcontroller","agentcrtlcontrollertest","agentcrtlhelper","agents","agents::auth","agents::search","agents::sessionscontroller","answer","answertest","api","api::v1","api::v1::agentcontroller","api::v1::apicontroller","api::v1::customercontroller","api::v1::sessioncontroller","apimailer","apimailerpreview","apimailertest","app","app::messages","app::messages::authentication","app::messages::errors","app::messages::signup","app::messages::success","app::paymequick","app::paymequick::app","applicationcable","applicationcable::channel","applicationcable::connection","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationrecord","applicationsystemtestcase","auth","await","awaittest","badge","badgetest","cat","cattest","categorie","categorieservice","categorieservicetest","categorieservicescontroller","categorieservicescontrollertest","categorieserviceshelper","categorieservicestest","categorietest","categoriescontroller","categoriescontrollertest","categorieshelper","categoriestest","catscontroller","catscontrollertest","catshelper","catstest","client","clientcontroller","clientcontrollertest","clienthelper","commission","commissiontest","contactform","customer","customerclient","customerclient::client","customerclient::paywithcode","customerdatum","customerdatumtest","customerdesktop","customerdesktop::client","customertest","demouser","demouseraccount","demouseraccounttest","demousertest","distancematrix","distancematrix::distancematrix","entreprise","entreprise::entreprise","entreprise::manage","entreprise::sms","eu","eu::euapi","eu::eupartner","external","external::demousers","fraud","fraud::customer","fraud::security","gestionentreprise","gestionentreprise::agence","gestionentreprise::entreprise","gestionentreprise::user","history","historytest","homecontroller","homecontrollertest","homehelper","journal","journal::journal","journal::journaldepot","journal::journalretrait","journal::journaleentreprise","logger","logstory","logstory::histo","lorem","messages","object","onesignal","onesignal::onesignalsend","onesignal::sendemailapi","p","p::authenticate","p::authorize","p::guichet","p::search","palier","paliertest","parametre","parametre::authentication","parametre::cleanaccounts","parametre::crypto","parametre::forgotpassword","parametre::parametre","parametre::personaldata","parametre::profiles","parametre::security","parametre::securityquestion","parametre::ussd","parametrescontroller","parametrescontrollertest","parametreshelper","partenaire","partenaire::authenticate","partenaire::authorize","partenaire::guichet","partenaire::search","partner","partnertest","partnersplateform","partnersplateform::client","partnersplateform::partner","paylib","paylib::customerpaymentsolution","paylib::paymentsolution","paymequick","paymequick::payment","popcash","popcash::application","popcash::application::rack","qrmodel","qrmodeltest","question","questiontest","role","roletest","rolescontroller","rolescontrollertest","roleshelper","rolestest","service","servicetest","servicescontroller","servicescontrollertest","serviceshelper","servicestest","setaccount","sms","smspassword","smspasswordtest","sprintpay","sprintpay::check","sprintpay::check::checkphone","sprintpay::pay","sprintpay::pay::payment","sprintpay::v2","sprintpay::v2::sp","transaction","transactiontest","transactions","type","typetest","typescontroller","typescontrollertest","typeshelper","typestest","user","usertest","userscontroller","userscontrollertest","usershelper","userstest","verifycontroller","verifycontrollertest","verifyhelper","welcomecontroller","welcomecontrollertest","external::demousers::payment()","setaccount::account()","agentcrtlcontroller#activate_customer()","api::v1::agentcontroller#activate_customer()","agentcrtlcontroller#activate_customer_account()","agentcrtlcontroller#activate_customer_intent()","abonnements::abonnements::add()","abonnements::paliers::add()","paylib::customerpaymentsolution::add()","paylib::paymentsolution::add()","parametre::crypto::aesencode()","parametrescontroller#agence()","parametre::parametre::agis_percentage()","lorem::amount()","homecontroller#apikey()","homecontroller#apikey_request()","app::paymequick::app::app()","app::paymequick::app::app_id()","clientcontroller#attemp_login()","agentcrtlcontroller#attemp_signin()","clientcontroller#attemp_signup()","api::v1::sessioncontroller#authnewuuiddevice()","parametre::authentication::auth_top()","gestionentreprise::agence#authenticate()","api::v1::sessioncontroller#authorization()","p::authorize::authorize()","partenaire::authorize::authorize()","client::balance()","parametre::personaldata::cameroun()","client::cancelretrait()","api::v1::sessioncontroller#cancel_retrait()","eu::euapi::cashin()","customerclient::paywithcode::check()","logstory::histo::check()","transactions::check()","client::checkheader()","api::v1::sessioncontroller#checkphone()","apimailer#checkretraitfail()","api::v1::sessioncontroller#checktoken()","api::v1::sessioncontroller#check_retrait()","client::check_retrait()","client::check_retrait_refactoring()","homecontroller#choose_layout()","api::v1::apicontroller#code()","customerdesktop::client::code_signin()","parametre::parametre::commission()","agent#complete_name()","customer#complete_name()","homecontroller#compte()","customerdesktop::client::confirm_signin()","app::messages::signup::confirmation()","accountscontroller#create()","categorieservicescontroller#create()","categoriescontroller#create()","catscontroller#create()","homecontroller#create()","lorem::create()","p::guichet::create()","parametre::profiles::create()","partenaire::guichet::create()","partnersplateform::client::create()","rolescontroller#create()","servicescontroller#create()","transactions::create()","typescontroller#create()","userscontroller#create()","eu::eupartner#createeupartner()","eu::euapi::createeum()","entreprise::entreprise::create_entreprise()","journal::journal::create_logs_transaction()","agentcrtlcontroller#create_qrcode()","p::authenticate::create_structure()","client::create_user()","client::create_user_account()","lorem::created()","client::credit()","homecontroller#credit()","partnersplateform::client::credit()","setaccount::credit()","eu::euapi#crediteum()","agentcrtlcontroller#credit_customer()","api::v1::agentcontroller#credit_customer()","parametre::crypto::cryptossl()","abonnements::paliers::current()","agentcrtlcontroller#customer()","api::v1::apicontroller#customer_account_amount()","agentcrtlcontroller#customer_activity()","paymequick::payment::customer_can_pay?()","paymequick::payment::customer_has_money_for_transaction?()","onesignal::onesignalsend::daily_news()","partnersplateform::client::debit()","setaccount::debit()","transactions::debit()","client::debit_client()","api::v1::agentcontroller#debit_customer()","agentcrtlcontroller#debit_customer_account()","client::debit_user_account()","lorem::decrypt()","abonnements::paliers::delete()","agentcrtlcontroller#delete()","p::guichet::delete()","parametre::profiles::delete()","partenaire::guichet::delete()","paylib::customerpaymentsolution::delete()","paylib::paymentsolution::delete()","eu::euapi#deleteeum()","paymequick::payment::demo_merchant_reached_daily_amount_limit?()","paymequick::payment::demo_merchant_reached_dayly_transaction_count_limit?()","paymequick::payment::demo_merchant_reached_monthly_amount_limit?()","paymequick::payment::demo_merchant_reached_monthly_transaction_count_limit?()","accountscontroller#destroy()","categorieservicescontroller#destroy()","categoriescontroller#destroy()","catscontroller#destroy()","rolescontroller#destroy()","servicescontroller#destroy()","typescontroller#destroy()","userscontroller#destroy()","api::v1::sessioncontroller#detailcategorie()","app::paymequick::app::developer()","client::device()","app::paymequick::app::devise()","distancematrix::distancematrix::duration()","abonnements::paliers::edit()","accountscontroller#edit()","agentcrtlcontroller#edit()","categorieservicescontroller#edit()","categoriescontroller#edit()","catscontroller#edit()","p::guichet::edit()","partenaire::guichet::edit()","rolescontroller#edit()","servicescontroller#edit()","typescontroller#edit()","userscontroller#edit()","logstory::histo::encaisser()","parametre::crypto::encode()","app::messages::authentication::errors()","abonnements::abonnements::evolve()","client::find_client()","client::find_marchand()","logger::formatlogger()","onesignal::onesignalsend::generalnotification()","parametre::ussd::generate()","agentcrtlcontroller#generateqrcode()","customer#generate_code()","onesignal::onesignalsend::genericonesignal()","distancematrix::distancematrix::geocoder_search()","eu::euapi::getaccountbalance()","eu::euapi::getpaymentstatus()","api::v1::sessioncontroller#getphonenumber()","api::v1::sessioncontroller#getsoldecustomer()","api::v1::sessioncontroller#getspdata()","parametre::parametre::get_account()","customerclient::client::get_all_question()","api::v1::sessioncontroller#get_balance()","client::get_balance()","client::get_balance_retrait()","customerclient::client::get_customer()","parametre::parametre::get_customer()","distancematrix::distancematrix::get_distance()","entreprise::entreprise::get_entreprise()","entreprise::entreprise::get_entreprise_account()","customerclient::client::get_question()","logstory::histo::get_user_history()","logstory::histo::h_customer()","logstory::histo::h_interval()","client::hashamount()","contactform#headers()","api::v1::sessioncontroller#histo()","api::v1::sessioncontroller#histodetail()","p::guichet::historique()","partenaire::guichet::historique()","api::v1::customercontroller#history()","api::v1::sessioncontroller#history()","customerdesktop::client::history()","logstory::histo::history()","api::v1::sessioncontroller#historybydate()","logstory::histo::historylog()","customerdesktop::client::history_period()","welcomecontroller#home()","sprintpay::pay::payment::includekey()","accountscontroller#index()","agentcrtlcontroller#index()","categorieservicescontroller#index()","categoriescontroller#index()","catscontroller#index()","clientcontroller#index()","homecontroller#index()","parametrescontroller#index()","rolescontroller#index()","servicescontroller#index()","typescontroller#index()","userscontroller#index()","customerdesktop::client#inialize()","client::init_retrait()","agentcrtlcontroller#intend_qrcode()","agentcrtlcontroller#intent_credit_customer()","agentcrtlcontroller#intent_debit_customer()","agentcrtlcontroller#intent_new_customer()","client::isfraud?()","client::islock?()","client::is_await_valid?()","agentcrtlcontroller#is_complete?()","customerdesktop::client::is_customer?()","p::authenticate::is_enterprise_exist?()","p::authenticate::is_user_exist?()","agentcrtlcontroller#journal()","api::v1::agentcontroller#journal()","parametrescontroller#journal()","app::paymequick::app::key()","sprintpay::v2::sp#keys()","lorem::lang()","parametre::forgotpassword::lastcnichar()","app::paymequick::app::limit()","fraud::customer::limitloginattempt()","api::v1::agentcontroller#link()","abonnements::abonnements::list()","paylib::customerpaymentsolution::list()","paylib::paymentsolution::list()","agents::auth::lock()","gestionentreprise::agence#lock()","p::authenticate::lock()","p::guichet::lock()","partenaire::authenticate::lock()","partenaire::guichet::lock()","paylib::customerpaymentsolution::lock()","paylib::paymentsolution::lock()","client::lockcustomeraccount()","parametre::securityquestion::lockcustomeraccount()","agentcrtlcontroller#lock_customer_account()","journal::journal::log_login()","homecontroller#login()","gestionentreprise::agence#maps()","paymequick::payment::merchant_can_receive?()","paymequick::payment::merchant_is_demo_user?()","app::messages::authentication::message()","onesignal::onesignalsend::montantinferieur()","sms::mppp()","sprintpay::pay::payment::mtn()","accountscontroller#new()","agentcrtlcontroller#new()","categorieservicescontroller#new()","categoriescontroller#new()","catscontroller#new()","client::new()","entreprise::sms::new()","eu::euapi::new()","eu::eupartner::new()","gestionentreprise::agence::new()","journal::journal::new()","logstory::histo::new()","p::authenticate::new()","p::authorize::new()","p::guichet::new()","p::search::new()","parametre::cleanaccounts::new()","parametre::forgotpassword::new()","parametre::security::new()","parametre::securityquestion::new()","parametre::ussd::new()","partenaire::authenticate::new()","partenaire::authorize::new()","partenaire::guichet::new()","partenaire::search::new()","partnersplateform::client::new()","partnersplateform::partner::new()","rolescontroller#new()","servicescontroller#new()","setaccount::new()","sms::new()","sprintpay::check::checkphone::new()","sprintpay::pay::payment::new()","transactions::new()","typescontroller#new()","userscontroller#new()","onesignal::onesignalsend::new_alerte()","agentcrtlcontroller#new_customer()","api::v1::agentcontroller#new_customer()","p::authenticate::new_customer()","agentcrtlcontroller#new_qrcode()","sms::nexah()","onesignal::onesignalsend::notpaytome()","apimailer#notify()","apimailer#notifyadmin()","apimailerpreview#notifyadmin()","parametre::personaldata::numerocameroun()","parametre::personaldata::numerooperateurmobile()","sprintpay::pay::payment::om()","sprintpay::pay::payment::orange()","api::v1::sessioncontroller#p()","clientcontroller#parameters()","homecontroller#particulier()","partnersplateform::partner::partnerauthenticate()","p::authenticate::partner_customer()","p::authenticate::partner_verify()","agents::auth::password()","fraud::customer::passwordvalidation()","client::pay()","customerclient::paywithcode::pay()","eu::euapi::pay()","parametre::ussd::pay()","parametre::personaldata::payussd()","api::v1::apicontroller#payment()","logstory::histo::payment()","paymequick::payment::payment()","distancematrix::distancematrix::pays()","api::v1::apicontroller#phonepayment()","client::prettycallsexe()","homecontroller#private()","partnersplateform::client::processfinalize()","homecontroller#public()","api::v1::apicontroller#qrcode()","lorem::qrcode()","verifycontroller#query()","api::v1::sessioncontroller#question()","parametrescontroller#rapprochement()","parametre::profiles::read()","api::v1::sessioncontroller#rechargesprintpay()","partnersplateform::client::recovery()","logger::register()","transactions::register()","entreprise::manage::release()","sms::resend()","api::v1::sessioncontroller#resetpassword()","parametre::forgotpassword::resetpassword()","agentcrtlcontroller#result()","agentcrtlcontroller#result_unlock()","homecontroller#retrait()","onesignal::onesignalsend::retraitonesignal()","homecontroller#retrait_intend()","customerclient::client::retrieve_password()","api::v1::sessioncontroller#retrivepassword()","client::savehistory()","abonnements::abonnements::search()","agentcrtlcontroller#search()","gestionentreprise::agence#search()","parametre::profiles::search()","api::v1::apicontroller#searchcontext()","api::v1::agentcontroller#searchcustomerbyphone()","p::search::searchguichet()","partenaire::search::searchguichet()","p::search::searchoperator()","partenaire::search::searchoperator()","api::v1::agentcontroller#searchqrcodebyscan()","api::v1::agentcontroller#searchqrcodebycode()","api::v1::agentcontroller#search_customer()","agentcrtlcontroller#search_phone()","parametre::security::secure3d()","entreprise::sms::send()","sms::send()","sprintpay::pay::payment::send()","apimailer#sendadmin()","onesignal::sendemailapi::sendemail()","onesignal::onesignalsend::sendnotification()","eu::euapi::sendpaymentrequest()","onesignal::onesignalsend::send_push()","sms::sender()","api::v1::sessioncontroller#service()","api::v1::sessioncontroller#servicecategorie()","parametre::parametre::setcommission()","parametre::parametre::setmontantaretirer()","parametre::personaldata::setpersonaldata()","parametre::securityquestion::setsecurityquestion()","accountscontroller#show()","categorieservicescontroller#show()","categoriescontroller#show()","catscontroller#show()","rolescontroller#show()","servicescontroller#show()","typescontroller#show()","userscontroller#show()","p::authenticate::signied()","agentcrtlcontroller#signin()","agents::auth::signin()","api::v1::agentcontroller#signin()","api::v1::customercontroller#signin()","api::v1::sessioncontroller#signin()","client::signin()","customerdesktop::client::signin()","partenaire::authenticate::signin()","clientcontroller#signing()","agents::auth::signup()","api::v1::customercontroller#signup()","api::v1::sessioncontroller#signup()","client::signup()","clientcontroller#signup()","homecontroller#signup()","p::authenticate::signup()","partenaire::authenticate::signup()","apimailer#signupfail()","api::v1::sessioncontroller#signup_authentication()","sms::sms_to_many()","api::v1::sessioncontroller#solde()","parametre::parametre::soldefinale()","parametre::parametre::soldetest()","sprintpay::pay::payment::sp()","p::authenticate#struture_params()","app::messages::authentication::success()","entreprise::manage::suspend()","object#system!()","api::v1::sessioncontroller#testnetwork()","eu::euapi::texteuapi()","api::v1::sessioncontroller#transaction()","transactions::transaction()","client::transfert()","applicationhelper#un_hash()","gestionentreprise::agence#unlock()","p::authenticate::unlock()","p::guichet::unlock()","partenaire::authenticate::unlock()","partenaire::guichet::unlock()","parametre::securityquestion::unlockcustomeraccount()","agentcrtlcontroller#unlock_customer_account()","accountscontroller#update()","api::v1::agentcontroller#update()","categorieservicescontroller#update()","categoriescontroller#update()","catscontroller#update()","parametre::profiles::update()","partnersplateform::client::update()","paylib::paymentsolution::update()","rolescontroller#update()","servicescontroller#update()","typescontroller#update()","userscontroller#update()","api::v1::sessioncontroller#updateaccount()","client::updatedevice()","api::v1::sessioncontroller#updatepassword()","client::update_account_client()","client::update_account_marchand()","parametrescontroller#utilisateur()","agentcrtlcontroller#validate_lock_customer_account()","parametre::authentication::validate_otp()","api::v1::sessioncontroller#validate_retrait()","client::validate_retrait()","api::v1::customercontroller#validate_signin()","verifycontroller#verify()","sprintpay::check::checkphone::verifyphone()","sprintpay::check::checkphone::verify_amount()","api::v1::sessioncontroller#virtualsp()","welcomecontroller#webview()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["Abonnement","","Abonnement.html","",""],["AbonnementTest","","AbonnementTest.html","",""],["Abonnements","","Abonnements.html","",""],["Abonnements::Abonnements","","Abonnements/Abonnements.html","",""],["Abonnements::Paliers","","Abonnements/Paliers.html","",""],["Account","","Account.html","",""],["AccountTest","","AccountTest.html","",""],["AccountsController","","AccountsController.html","",""],["AccountsControllerTest","","AccountsControllerTest.html","",""],["AccountsHelper","","AccountsHelper.html","",""],["AccountsTest","","AccountsTest.html","",""],["ActiveSupport","","ActiveSupport.html","",""],["ActiveSupport::TestCase","","ActiveSupport/TestCase.html","",""],["Agent","","Agent.html","",""],["AgentTest","","AgentTest.html","",""],["AgentcrtlController","","AgentcrtlController.html","",""],["AgentcrtlControllerTest","","AgentcrtlControllerTest.html","",""],["AgentcrtlHelper","","AgentcrtlHelper.html","",""],["Agents","","Agents.html","",""],["Agents::Auth","","Agents/Auth.html","",""],["Agents::Search","","Agents/Search.html","",""],["Agents::SessionsController","","Agents/SessionsController.html","",""],["Answer","","Answer.html","",""],["AnswerTest","","AnswerTest.html","",""],["Api","","Api.html","",""],["Api::V1","","Api/V1.html","",""],["Api::V1::AgentController","","Api/V1/AgentController.html","",""],["Api::V1::ApiController","","Api/V1/ApiController.html","",""],["Api::V1::CustomerController","","Api/V1/CustomerController.html","",""],["Api::V1::SessionController","","Api/V1/SessionController.html","",""],["ApiMailer","","ApiMailer.html","",""],["ApiMailerPreview","","ApiMailerPreview.html","","<p>Preview all emails at localhost:3000/rails/mailers/api_mailer\n"],["ApiMailerTest","","ApiMailerTest.html","",""],["App","","App.html","","<p>APP BASIC INFORMATIONS\n\n<pre>App::</pre>\n"],["App::Messages","","App/Messages.html","",""],["App::Messages::Authentication","","App/Messages/Authentication.html","","<p>Tout ce qui concerne les messages de login\n"],["App::Messages::Errors","","App/Messages/Errors.html","",""],["App::Messages::Signup","","App/Messages/Signup.html","",""],["App::Messages::Success","","App/Messages/Success.html","",""],["App::PayMeQuick","","App/PayMeQuick.html","",""],["App::PayMeQuick::App","","App/PayMeQuick/App.html","",""],["ApplicationCable","","ApplicationCable.html","",""],["ApplicationCable::Channel","","ApplicationCable/Channel.html","",""],["ApplicationCable::Connection","","ApplicationCable/Connection.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["ApplicationRecord","","ApplicationRecord.html","",""],["ApplicationSystemTestCase","","ApplicationSystemTestCase.html","",""],["Auth","","Auth.html","",""],["Await","","Await.html","","<p>MODELE DE GESTION DES INTENTION DE RETRAIT\n"],["AwaitTest","","AwaitTest.html","",""],["Badge","","Badge.html","",""],["BadgeTest","","BadgeTest.html","",""],["Cat","","Cat.html","",""],["CatTest","","CatTest.html","",""],["Categorie","","Categorie.html","",""],["CategorieService","","CategorieService.html","",""],["CategorieServiceTest","","CategorieServiceTest.html","",""],["CategorieServicesController","","CategorieServicesController.html","",""],["CategorieServicesControllerTest","","CategorieServicesControllerTest.html","",""],["CategorieServicesHelper","","CategorieServicesHelper.html","",""],["CategorieServicesTest","","CategorieServicesTest.html","",""],["CategorieTest","","CategorieTest.html","",""],["CategoriesController","","CategoriesController.html","",""],["CategoriesControllerTest","","CategoriesControllerTest.html","",""],["CategoriesHelper","","CategoriesHelper.html","",""],["CategoriesTest","","CategoriesTest.html","",""],["CatsController","","CatsController.html","",""],["CatsControllerTest","","CatsControllerTest.html","",""],["CatsHelper","","CatsHelper.html","",""],["CatsTest","","CatsTest.html","",""],["Client","","Client.html","",""],["ClientController","","ClientController.html","",""],["ClientControllerTest","","ClientControllerTest.html","",""],["ClientHelper","","ClientHelper.html","",""],["Commission","","Commission.html","",""],["CommissionTest","","CommissionTest.html","",""],["ContactForm","","ContactForm.html","",""],["Customer","","Customer.html","","<p>MODEL DE L&#39;UTILISATEUR PRINCIPAL\n"],["CustomerClient","","CustomerClient.html","",""],["CustomerClient::Client","","CustomerClient/Client.html","",""],["CustomerClient::PayWithCode","","CustomerClient/PayWithCode.html","",""],["CustomerDatum","","CustomerDatum.html","",""],["CustomerDatumTest","","CustomerDatumTest.html","",""],["CustomerDesktop","","CustomerDesktop.html","",""],["CustomerDesktop::Client","","CustomerDesktop/Client.html","",""],["CustomerTest","","CustomerTest.html","",""],["DemoUser","","DemoUser.html","",""],["DemoUserAccount","","DemoUserAccount.html","",""],["DemoUserAccountTest","","DemoUserAccountTest.html","",""],["DemoUserTest","","DemoUserTest.html","",""],["DistanceMatrix","","DistanceMatrix.html","",""],["DistanceMatrix::DistanceMatrix","","DistanceMatrix/DistanceMatrix.html","",""],["Entreprise","","Entreprise.html","",""],["Entreprise::Entreprise","","Entreprise/Entreprise.html","",""],["Entreprise::Manage","","Entreprise/Manage.html","",""],["Entreprise::Sms","","Entreprise/Sms.html","","<p>permet d&#39;envoyer les SMS entreprise\n"],["Eu","","Eu.html","","<p>Module permettant de gerer les transactions Express Union\n"],["Eu::EuApi","","Eu/EuApi.html","",""],["Eu::EuPartner","","Eu/EuPartner.html","","<p>classe pour la gestion des partenaires EU/EUM\n"],["External","","External.html","","<p>Gestion des utilisateurs externe a la plateforme\n"],["External::DemoUsers","","External/DemoUsers.html","","<p>permet de gerer l&#39;utilisateur demo, n&#39;ayant pas de compte\n"],["Fraud","","Fraud.html","",""],["Fraud::Customer","","Fraud/Customer.html","",""],["Fraud::Security","","Fraud/Security.html","",""],["GestionEntreprise","","GestionEntreprise.html","",""],["GestionEntreprise::Agence","","GestionEntreprise/Agence.html","","<p>class de gestion des agence\n"],["GestionEntreprise::Entreprise","","GestionEntreprise/Entreprise.html","","<p>class permettant de gerer les entreprises\n"],["GestionEntreprise::User","","GestionEntreprise/User.html","","<p>class de gestion des utilisateurs\n"],["History","","History.html","",""],["HistoryTest","","HistoryTest.html","",""],["HomeController","","HomeController.html","",""],["HomeControllerTest","","HomeControllerTest.html","",""],["HomeHelper","","HomeHelper.html","",""],["Journal","","Journal.html","",""],["Journal::Journal","","Journal/Journal.html","",""],["Journal::JournalDepot","","Journal/JournalDepot.html","",""],["Journal::JournalRetrait","","Journal/JournalRetrait.html","",""],["Journal::JournaleEntreprise","","Journal/JournaleEntreprise.html","","<p>class pour journaliser les activités des entreprises\n"],["Logger","","Logger.html","",""],["Logstory","","Logstory.html","","<p>Return all history transaction from customer or enterprise\n"],["Logstory::Histo","","Logstory/Histo.html","",""],["Lorem","","Lorem.html","",""],["Messages","","Messages.html","",""],["Object","","Object.html","",""],["OneSignal","","OneSignal.html","",""],["OneSignal::OneSignalSend","","OneSignal/OneSignalSend.html","",""],["OneSignal::SendEmailAPI","","OneSignal/SendEmailAPI.html","",""],["P","","P.html","",""],["P::Authenticate","","P/Authenticate.html","",""],["P::Authorize","","P/Authorize.html","",""],["P::Guichet","","P/Guichet.html","","<p>Gestion des guichets\n"],["P::Search","","P/Search.html","",""],["Palier","","Palier.html","",""],["PalierTest","","PalierTest.html","",""],["Parametre","","Parametre.html","","<p>ALL PARAMETERS APP @version 1.0\n"],["Parametre::Authentication","","Parametre/Authentication.html","",""],["Parametre::CleanAccounts","","Parametre/CleanAccounts.html","",""],["Parametre::Crypto","","Parametre/Crypto.html","",""],["Parametre::ForgotPassword","","Parametre/ForgotPassword.html","","<p>RECUPERATION DU MOT DE PASSE\n"],["Parametre::Parametre","","Parametre/Parametre.html","",""],["Parametre::PersonalData","","Parametre/PersonalData.html","",""],["Parametre::Profiles","","Parametre/Profiles.html","","<p>Parametres d&#39;informations de l&#39;utilisateur\n"],["Parametre::Security","","Parametre/Security.html","","<p>Secure customer transaction with secure3d\n"],["Parametre::SecurityQuestion","","Parametre/SecurityQuestion.html","",""],["Parametre::USSD","","Parametre/USSD.html","","<p>retourne les transaction USSD de la transaction\n"],["ParametresController","","ParametresController.html","",""],["ParametresControllerTest","","ParametresControllerTest.html","",""],["ParametresHelper","","ParametresHelper.html","",""],["Partenaire","","Partenaire.html","",""],["Partenaire::Authenticate","","Partenaire/Authenticate.html","",""],["Partenaire::Authorize","","Partenaire/Authorize.html","",""],["Partenaire::Guichet","","Partenaire/Guichet.html","","<p>Gestion des guichets\n"],["Partenaire::Search","","Partenaire/Search.html","",""],["Partner","","Partner.html","",""],["PartnerTest","","PartnerTest.html","",""],["PartnersPlateform","","PartnersPlateform.html","",""],["PartnersPlateform::Client","","PartnersPlateform/Client.html","","<p>permet aux partenaire de manipuler les clients de la plateforme\n"],["PartnersPlateform::Partner","","PartnersPlateform/Partner.html","",""],["PayLib","","PayLib.html","","<p>PERMET DE FOURNIR LES PAIEMENTS DE SOLUTIONS QUE L&#39;UTILISATEUR POURRAIT\nUTILISER EN PLUS DE PAYER …\n"],["PayLib::CustomerPaymentSolution","","PayLib/CustomerPaymentSolution.html","",""],["PayLib::PaymentSolution","","PayLib/PaymentSolution.html","","<p>MANAGE PAYMENT SOLUTION FOR PLATEFORM API\n"],["PayMeQuick","","PayMeQuick.html","",""],["PayMeQuick::Payment","","PayMeQuick/Payment.html","",""],["PopCash","","PopCash.html","",""],["PopCash::Application","","PopCash/Application.html","",""],["PopCash::Application::Rack","","PopCash/Application/Rack.html","",""],["Qrmodel","","Qrmodel.html","",""],["QrmodelTest","","QrmodelTest.html","",""],["Question","","Question.html","",""],["QuestionTest","","QuestionTest.html","",""],["Role","","Role.html","",""],["RoleTest","","RoleTest.html","",""],["RolesController","","RolesController.html","",""],["RolesControllerTest","","RolesControllerTest.html","",""],["RolesHelper","","RolesHelper.html","",""],["RolesTest","","RolesTest.html","",""],["Service","","Service.html","",""],["ServiceTest","","ServiceTest.html","",""],["ServicesController","","ServicesController.html","",""],["ServicesControllerTest","","ServicesControllerTest.html","",""],["ServicesHelper","","ServicesHelper.html","",""],["ServicesTest","","ServicesTest.html","",""],["SetAccount","","SetAccount.html","",""],["Sms","","Sms.html","","<p>SEND SMS FROM EVERYWHERE INSIDE THE APP\n"],["SmsPassword","","SmsPassword.html","",""],["SmsPasswordTest","","SmsPasswordTest.html","",""],["SprintPay","","SprintPay.html","","<p>SPRINTPAY MODULE PAYMENT MOBILE\n\n<pre>TODO nothing for now on this module</pre>\n"],["SprintPay::Check","","SprintPay/Check.html","",""],["SprintPay::Check::CheckPhone","","SprintPay/Check/CheckPhone.html","",""],["SprintPay::Pay","","SprintPay/Pay.html","","<p>TODO module pour le paiement\n"],["SprintPay::Pay::Payment","","SprintPay/Pay/Payment.html","",""],["SprintPay::V2","","SprintPay/V2.html","","<p>New SprintPay payment API\n"],["SprintPay::V2::SP","","SprintPay/V2/SP.html","",""],["Transaction","","Transaction.html","",""],["TransactionTest","","TransactionTest.html","",""],["Transactions","","Transactions.html","",""],["Type","","Type.html","",""],["TypeTest","","TypeTest.html","",""],["TypesController","","TypesController.html","",""],["TypesControllerTest","","TypesControllerTest.html","",""],["TypesHelper","","TypesHelper.html","",""],["TypesTest","","TypesTest.html","",""],["User","","User.html","",""],["UserTest","","UserTest.html","",""],["UsersController","","UsersController.html","",""],["UsersControllerTest","","UsersControllerTest.html","",""],["UsersHelper","","UsersHelper.html","",""],["UsersTest","","UsersTest.html","",""],["VerifyController","","VerifyController.html","",""],["VerifyControllerTest","","VerifyControllerTest.html","",""],["VerifyHelper","","VerifyHelper.html","",""],["WelcomeController","","WelcomeController.html","",""],["WelcomeControllerTest","","WelcomeControllerTest.html","",""],["Payment","External::DemoUsers","External/DemoUsers.html#method-c-Payment","(argv)","<p>@api External::DemoUsers.Payment(argv) @author mvondoyannick@gmail.com\n@param [Object] argv\n"],["account","SetAccount","SetAccount.html#method-c-account","(id)","<p>permet de creer un compte apres creation d&#39;un compte et initialisation\nde ce compte a nil\n"],["activate_customer","AgentcrtlController","AgentcrtlController.html#method-i-activate_customer","()","<p>Permet d&#39;activer un client\n"],["activate_customer","Api::V1::AgentController","Api/V1/AgentController.html#method-i-activate_customer","()",""],["activate_customer_account","AgentcrtlController","AgentcrtlController.html#method-i-activate_customer_account","()","<p>permet d&#39;activer le compte d&#39;un utilisateur\n"],["activate_customer_intent","AgentcrtlController","AgentcrtlController.html#method-i-activate_customer_intent","()","<p>intent activate customer\n"],["add","Abonnements::Abonnements","Abonnements/Abonnements.html#method-c-add","(palier_id, customer_id)","<p>Add new abonnement\n\n<pre>@param [Integer] palier_id\n@param [Integer] customer_id</pre>\n"],["add","Abonnements::Paliers","Abonnements/Paliers.html#method-c-add","(name, amount, max_retrait)","<p>@param [String] name @param [Integer] amount @param [Integer] max_retrait\n"],["add","PayLib::CustomerPaymentSolution","PayLib/CustomerPaymentSolution.html#method-c-add","(argv)","<p>CONFIGURE AND ADD A PAYMENT SOLUTION TO CUSTOMER ACCOUNT @param [Object]\ncustomer_id @param [Object] …\n"],["add","PayLib::PaymentSolution","PayLib/PaymentSolution.html#method-c-add","()","<p>ADD PAYMENT SOLUTION\n"],["aesEncode","Parametre::Crypto","Parametre/Crypto.html#method-c-aesEncode","(chaine)","<p>CRYPTAGE AES 256\n\n<pre>@param [Object] chaine</pre>\n"],["agence","ParametresController","ParametresController.html#method-i-agence","()","<p>permet la gestion des agences\n"],["agis_percentage","Parametre::Parametre","Parametre/Parametre.html#method-c-agis_percentage","(amount)","<p>retourne le montant majoré du client (montant avec commission)\n\n<pre>@param [Integer] amount</pre>\n"],["amount","Lorem","Lorem.html#method-c-amount","(a)",""],["apikey","HomeController","HomeController.html#method-i-apikey","()",""],["apikey_request","HomeController","HomeController.html#method-i-apikey_request","()",""],["app","App::PayMeQuick::App","App/PayMeQuick/App.html#method-c-app","()","<p>return application name @return [String]\n"],["app_id","App::PayMeQuick::App","App/PayMeQuick/App.html#method-c-app_id","()","<p>GENERATE APP ID FOR BOTH ANDROID AND IOS\n"],["attemp_login","ClientController","ClientController.html#method-i-attemp_login","()","<p>permet de valider les informations de connexion du partenaire\n"],["attemp_signin","AgentcrtlController","AgentcrtlController.html#method-i-attemp_signin","()","<p>Intention de connexion d&#39;un partenaire\n"],["attemp_signup","ClientController","ClientController.html#method-i-attemp_signup","()","<p>traitement de la requete de creation de  compte sur la plateforme\n"],["authNewUuidDevice","Api::V1::SessionController","Api/V1/SessionController.html#method-i-authNewUuidDevice","()","<p>Update customer device uuis\n"],["auth_top","Parametre::Authentication","Parametre/Authentication.html#method-c-auth_top","(phone, context=\"phone\")","<p>permet l&#39;authentification a deux niveau a la creation du compte pour\ns&#39;assurer que le client …\n"],["authenticate","GestionEntreprise::Agence","GestionEntreprise/Agence.html#method-i-authenticate","()",""],["authorization","Api::V1::SessionController","Api/V1/SessionController.html#method-i-authorization","()","<p>verificatin d&#39;un utilisateur et validation de son pwd\n"],["authorize","P::Authorize","P/Authorize.html#method-c-authorize","()","<p>autoriser un client ou un guichet\n"],["authorize","Partenaire::Authorize","Partenaire/Authorize.html#method-c-authorize","()","<p>autoriser un client ou un guichet\n"],["balance","Client","Client.html#method-c-balance","(argv, locale)","<p>GET CREDIT BALANCE ACCOUNT REFACTORING\n\n<pre>@param [Object] argv</pre>\n"],["cameroun","Parametre::PersonalData","Parametre/PersonalData.html#method-c-cameroun","(phone)","<p>permet de determiner si c&#39;est un numero du cmr\n"],["cancelRetrait","Client","Client.html#method-c-cancelRetrait","(argv, message=nil , locale)","<p>ANNULATION D UN RETRAIT DANS UN COMPTE CLIENT\n\n<pre>@method   name Cancel current retrait by user\n@name     ...</pre>\n"],["cancel_retrait","Api::V1::SessionController","Api/V1/SessionController.html#method-i-cancel_retrait","()","<p>CANCEL CUSTOMER INTENT RETRAIT\n\n<pre>permet d&#39;annuler le retrait en cours</pre>\n"],["cashin","Eu::EuApi","Eu/EuApi.html#method-c-cashin","(phone, amount)","<p>Permet de faire une recharge  de compte\n\n<pre>@param [Object] phone\n@param [Object] amount</pre>\n"],["check","CustomerClient::PayWithCode","CustomerClient/PayWithCode.html#method-c-check","(min, token)","<p>Payer avec le code MIN\n\n<pre>@param [Object] min\n@param [Object] token</pre>\n"],["check","Logstory::Histo","Logstory/Histo.html#method-c-check","(customer)","<p>permet de recherche un utilisateur\n"],["check","Transactions","Transactions.html#method-c-check","(customer)",""],["checkHeader","Client","Client.html#method-c-checkHeader","(header)","<p>AUTHENTIFICATION D UN USTOMER VIA LE HEADER RECU\n\n<pre>@method name  Check Header for customer\n@name        ...</pre>\n"],["checkPhone","Api::V1::SessionController","Api/V1/SessionController.html#method-i-checkPhone","()","<p>Verifier si un telephone appartient a la plateforme\n"],["checkRetraitFail","ApiMailer","ApiMailer.html#method-i-checkRetraitFail","()","<p>Echec de la procedure de retrait\n"],["checkToken","Api::V1::SessionController","Api/V1/SessionController.html#method-i-checkToken","()","<p>CHECK WEB\n"],["check_retrait","Api::V1::SessionController","Api/V1/SessionController.html#method-i-check_retrait","()","<p>CHECK CUSTOMER INTENT RETRAIT\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">verification</span> <span class=\"ruby-identifier\">du</span> <span class=\"ruby-identifier\">retrait</span>\n</pre>\n"],["check_retrait","Client","Client.html#method-c-check_retrait","(phone)","<p>VERIFICATION DE L EXISTENCE D&#39;UNE INTENTION DE RETRAIT EN COURS\n\n<pre>@method   Check retrait | verifier ...</pre>\n"],["check_retrait_refactoring","Client","Client.html#method-c-check_retrait_refactoring","(token, locale)","<p>VERIFICATION DE LA PRESENCE DE L&#39;INTENT DE RETRAIT  &mdash; REFACTORING – UPDATE\n\n\n<pre>@param [Object] token\n@author ...</pre>\n"],["choose_layout","HomeController","HomeController.html#method-i-choose_layout","()",""],["code","Api::V1::ApiController","Api/V1/ApiController.html#method-i-code","()","<p>PAY WITH MIN MERCHANT CODE\n\n<pre>@param @code\n@param @token\nTODO request token inside each API header un payment</pre>\n"],["code_signin","CustomerDesktop::Client","CustomerDesktop/Client.html#method-c-code_signin","(phone)","<p>Permet de generer le code d identification d authentification d&#39;un\nclient web\n\n<pre>@param [Object] phone</pre>\n"],["commission","Parametre::Parametre","Parametre/Parametre.html#method-c-commission","(transaction_id, amount, total, commission)","<p>ENREGISTREMENT DE LA COMMISSION SUR UNE TRANSACTION\n\n<pre>@param [Object] transaction_id\n@param [Object] amount ...</pre>\n"],["complete_name","Agent","Agent.html#method-i-complete_name","()",""],["complete_name","Customer","Customer.html#method-i-complete_name","()","<p>Experiment\n"],["compte","HomeController","HomeController.html#method-i-compte","()",""],["confirm_signin","CustomerDesktop::Client","CustomerDesktop/Client.html#method-c-confirm_signin","(phone, code)","<p>@param [Object] phone @param [Object] code\n"],["confirmation","App::Messages::Signup","App/Messages/Signup.html#method-c-confirmation","()",""],["create","AccountsController","AccountsController.html#method-i-create","()","<p>POST /accounts POST /accounts.json\n"],["create","CategorieServicesController","CategorieServicesController.html#method-i-create","()","<p>POST /categorie_services POST /categorie_services.json\n"],["create","CategoriesController","CategoriesController.html#method-i-create","()","<p>POST /categories POST /categories.json\n"],["create","CatsController","CatsController.html#method-i-create","()","<p>POST /cats POST /cats.json\n"],["create","HomeController","HomeController.html#method-i-create","()",""],["create","Lorem","Lorem.html#method-c-create","(argv)",""],["create","P::Guichet","P/Guichet.html#method-c-create","()","<p>Creation d&#39;un nouveau guichet\n"],["create","Parametre::Profiles","Parametre/Profiles.html#method-c-create","(argv, message)","<p>CREATE NEW USER PROFILE ON THE PLATEFORM\n\n<pre>@param [Object] argv\n@param [String] message</pre>\n"],["create","Partenaire::Guichet","Partenaire/Guichet.html#method-c-create","()","<p>Creation d&#39;un nouveau guichet\n"],["create","PartnersPlateform::Client","PartnersPlateform/Client.html#method-c-create","(name, second_name, cni)",""],["create","RolesController","RolesController.html#method-i-create","()","<p>POST /roles POST /roles.json\n"],["create","ServicesController","ServicesController.html#method-i-create","()","<p>POST /services POST /services.json\n"],["create","Transactions","Transactions.html#method-c-create","()",""],["create","TypesController","TypesController.html#method-i-create","()","<p>POST /types POST /types.json\n"],["create","UsersController","UsersController.html#method-i-create","()","<p>POST /users POST /users.json\n"],["createEuPartner","Eu::EuPartner","Eu/EuPartner.html#method-i-createEuPartner","(name, second_name, phone, cni)","<p>creation d&#39;un partenaire\n"],["createEum","Eu::EuApi","Eu/EuApi.html#method-c-createEum","()","<p>permet d&#39;envoyer les information de creer un compte vers l&#39;API EUM\n"],["create_entreprise","Entreprise::Entreprise","Entreprise/Entreprise.html#method-c-create_entreprise","(name, niu, registre, phone, email)","<p>NIU = Numero d&#39;indentification unique\n"],["create_logs_transaction","Journal::Journal","Journal/Journal.html#method-c-create_logs_transaction","(client_phone, marchand_phone, amount, context)",""],["create_qrcode","AgentcrtlController","AgentcrtlController.html#method-i-create_qrcode","()","<p>creation d&#39;un qrcode\n"],["create_structure","P::Authenticate","P/Authenticate.html#method-c-create_structure","(name, phone, logo, rccm, location)","<p>Gestion de la structure\n"],["create_user","Client","Client.html#method-c-create_user","(name, prenom, phone, cni, password, sexe, ip)","<p>CREATION DU COMPTE CLIENT\n\n<pre>@params  [String] name\n@params  [String] prenom\n@params  [Integer] phone\n@params ...</pre>\n"],["create_user_account","Client","Client.html#method-c-create_user_account","(phone)","<p>CREATION DU COMPTE VIRTUEL FINANCIER UTILISATEUR\n\n<pre>@name     Client::create_user_account(id:integer, phone:integer) ...</pre>\n"],["created","Lorem","Lorem.html#method-c-created","(argv)",""],["credit","Client","Client.html#method-c-credit","(phone, amount)","<p>CREDIT DU COMPTE VIRTUEL DU CLIENT\n\n<pre>@param [Object] phone\n@param [Object] amount\n@author @mvondoyannick ...</pre>\n"],["credit","HomeController","HomeController.html#method-i-credit","()","<p>crediter le compte d&#39;un utilisateur de la plateforme\n"],["credit","PartnersPlateform::Client","PartnersPlateform/Client.html#method-c-credit","(phone, amount, credential)",""],["credit","SetAccount","SetAccount.html#method-c-credit","()",""],["creditEum","Eu::EuApi","Eu/EuApi.html#method-i-creditEum","(phone, password, amount)","<p>permet de crediter un compte EUM via l&#39;API EU\n"],["credit_customer","AgentcrtlController","AgentcrtlController.html#method-i-credit_customer","()","<p>crediter un compte client\n"],["credit_customer","Api::V1::AgentController","Api/V1/AgentController.html#method-i-credit_customer","()",""],["cryptoSSL","Parametre::Crypto","Parametre/Crypto.html#method-c-cryptoSSL","(data)","<p>CRYPTAGE AVEC SSL\n\n<pre>@param [Object] data</pre>\n"],["current","Abonnements::Paliers","Abonnements/Paliers.html#method-c-current","(customer_id)","<p>Get customer current palier, sur la base de son abonnement\n"],["customer","AgentcrtlController","AgentcrtlController.html#method-i-customer","()","<p>affiche les customer sur la plateforme\n"],["customer_account_amount","Api::V1::ApiController","Api/V1/ApiController.html#method-i-customer_account_amount","()","<p>CUSTOMER AMOUNT DYNAMICALY\n"],["customer_activity","AgentcrtlController","AgentcrtlController.html#method-i-customer_activity","()","<p>permet de retourner le journal des activités d&#39;un customer\n"],["customer_can_pay?","PayMeQuick::Payment","PayMeQuick/Payment.html#method-c-customer_can_pay-3F","(argv, message=nil )","<p>VERIFY IF CUSTOMER CAN PAY A TRANSACTION\n\n<pre>@param [Object] argv\n@param [String] message\n@todo I have to ...</pre>\n"],["customer_has_money_for_transaction?","PayMeQuick::Payment","PayMeQuick/Payment.html#method-c-customer_has_money_for_transaction-3F","(customer, amount, message=nil)","<p>CHECK IF CUSTOMER HAS MONEY TO DO TRANSACTION\n\n<pre>@param [String] customer\n@param [String] amount\n@param [String] ...</pre>\n"],["daily_news","OneSignal::OneSignalSend","OneSignal/OneSignalSend.html#method-c-daily_news","()","<p>Send push to all users.\n"],["debit","PartnersPlateform::Client","PartnersPlateform/Client.html#method-c-debit","(phone, amount, credential)",""],["debit","SetAccount","SetAccount.html#method-c-debit","()",""],["debit","Transactions","Transactions.html#method-c-debit","()",""],["debit_client","Client","Client.html#method-c-debit_client","(id, amount, signature)","<p>DEBITER LE COMPTE D UN CLIENT\n\n<pre>@param [Object] id\n@param [Object] amount\n@param [Object] signature\n@author ...</pre>\n"],["debit_customer","Api::V1::AgentController","Api/V1/AgentController.html#method-i-debit_customer","()",""],["debit_customer_account","AgentcrtlController","AgentcrtlController.html#method-i-debit_customer_account","()","<p>debiter un compte client\n"],["debit_user_account","Client","Client.html#method-c-debit_user_account","(phone, amount)","<p>DEBIT LE COMPTE UTILISATEUR DURANT LA PROCEDURE DE RETRAIT\n\n<pre>@param [Object] phone\n@param [Object] amount ...</pre>\n"],["decrypt","Lorem","Lorem.html#method-c-decrypt","()",""],["delete","Abonnements::Paliers","Abonnements/Paliers.html#method-c-delete","(palier_id)","<p>DELETE Palier with some ID @param [Integer] palier_id\n"],["delete","AgentcrtlController","AgentcrtlController.html#method-i-delete","()",""],["delete","P::Guichet","P/Guichet.html#method-c-delete","()","<p>Destruction d&#39;un guichet\n"],["delete","Parametre::Profiles","Parametre/Profiles.html#method-c-delete","(argv, message)","<p>@param [Object] argv @param [String] message\n"],["delete","Partenaire::Guichet","Partenaire/Guichet.html#method-c-delete","()","<p>Destruction d&#39;un guichet\n"],["delete","PayLib::CustomerPaymentSolution","PayLib/CustomerPaymentSolution.html#method-c-delete","(argv)","<p>DELETE PAYMENT SOLUTION LINKED TO CUSTOMER ACCOUNT\n"],["delete","PayLib::PaymentSolution","PayLib/PaymentSolution.html#method-c-delete","(id)","<p>DELETE PAYMENT SOLUTION\n"],["deleteEum","Eu::EuApi","Eu/EuApi.html#method-i-deleteEum","(phone, password)","<p>permet de supprimer une compte EUM via l&#39;API\n"],["demo_merchant_reached_daily_amount_limit?","PayMeQuick::Payment","PayMeQuick/Payment.html#method-c-demo_merchant_reached_daily_amount_limit-3F","(merchant, message=nil)","<p>CHECK IF DEMO MERCHANT HAS REACHED DAYLY AMOUNT LIMIT\n\n<pre>@param [String] merchant\n@param [String] message ...</pre>\n"],["demo_merchant_reached_dayly_transaction_count_limit?","PayMeQuick::Payment","PayMeQuick/Payment.html#method-c-demo_merchant_reached_dayly_transaction_count_limit-3F","(merchant, message=nil)","<p>CHECK IF MERCHANT HAS REACHED DALY TRANSACTION COUNT LIMIT\n\n<pre>@param [String] merchant\n@param [String] message ...</pre>\n"],["demo_merchant_reached_monthly_amount_limit?","PayMeQuick::Payment","PayMeQuick/Payment.html#method-c-demo_merchant_reached_monthly_amount_limit-3F","(merchant, message=nil)","<p>CHECK IF DEMO MERCHANT HAS REACHED MONTHLY AMOUNT LIMIT\n\n<pre>@param [String] merchant\n@param [String] message ...</pre>\n"],["demo_merchant_reached_monthly_transaction_count_limit?","PayMeQuick::Payment","PayMeQuick/Payment.html#method-c-demo_merchant_reached_monthly_transaction_count_limit-3F","(merchant, message=nil)","<p>CHECK IF MERCHANT HAS REACHED MONTHLY TRANSACTION COUNT LIMIT\n\n<pre>@param [String] merchant\n@param [String] ...</pre>\n"],["destroy","AccountsController","AccountsController.html#method-i-destroy","()","<p>DELETE /accounts/1 DELETE /accounts/1.json\n"],["destroy","CategorieServicesController","CategorieServicesController.html#method-i-destroy","()","<p>DELETE /categorie_services/1 DELETE /categorie_services/1.json\n"],["destroy","CategoriesController","CategoriesController.html#method-i-destroy","()","<p>DELETE /categories/1 DELETE /categories/1.json\n"],["destroy","CatsController","CatsController.html#method-i-destroy","()","<p>DELETE /cats/1 DELETE /cats/1.json\n"],["destroy","RolesController","RolesController.html#method-i-destroy","()","<p>DELETE /roles/1 DELETE /roles/1.json\n"],["destroy","ServicesController","ServicesController.html#method-i-destroy","()","<p>DELETE /services/1 DELETE /services/1.json\n"],["destroy","TypesController","TypesController.html#method-i-destroy","()","<p>DELETE /types/1 DELETE /types/1.json\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /users/1 DELETE /users/1.json\n"],["detailCategorie","Api::V1::SessionController","Api/V1/SessionController.html#method-i-detailCategorie","()","<p>RENDER CATEGORIES DETAILS\n"],["developer","App::PayMeQuick::App","App/PayMeQuick/App.html#method-c-developer","()",""],["device","Client","Client.html#method-c-device","(argc, locale)","<p>CHECK CUSTOMER DEVICE ID\n\n<pre>detail verify if customer Device has been change on new login\nparam [Object] ...</pre>\n"],["devise","App::PayMeQuick::App","App/PayMeQuick/App.html#method-c-devise","()",""],["duration","DistanceMatrix::DistanceMatrix","DistanceMatrix/DistanceMatrix.html#method-c-duration","()","<p>temps de duree du&#39;un procedure\n"],["edit","Abonnements::Paliers","Abonnements/Paliers.html#method-c-edit","(args)","<p>EDITE SAVE PALIER ON DB\n\n<pre>TODO VERIFY AND VALIDATE THIS METHOD MODULE\n@param [Object] args</pre>\n"],["edit","AccountsController","AccountsController.html#method-i-edit","()","<p>GET /accounts/1/edit\n"],["edit","AgentcrtlController","AgentcrtlController.html#method-i-edit","()",""],["edit","CategorieServicesController","CategorieServicesController.html#method-i-edit","()","<p>GET /categorie_services/1/edit\n"],["edit","CategoriesController","CategoriesController.html#method-i-edit","()","<p>GET /categories/1/edit\n"],["edit","CatsController","CatsController.html#method-i-edit","()","<p>GET /cats/1/edit\n"],["edit","P::Guichet","P/Guichet.html#method-c-edit","()","<p>Editer un guichet\n"],["edit","Partenaire::Guichet","Partenaire/Guichet.html#method-c-edit","()","<p>Editer un guichet\n"],["edit","RolesController","RolesController.html#method-i-edit","()","<p>GET /roles/1/edit\n"],["edit","ServicesController","ServicesController.html#method-i-edit","()","<p>GET /services/1/edit\n"],["edit","TypesController","TypesController.html#method-i-edit","()","<p>GET /types/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()","<p>GET /users/1/edit\n"],["encaisser","Logstory::Histo","Logstory/Histo.html#method-c-encaisser","(phone)","<p>permet de faire l&#39;historique des encaissement entre clients\n\n<pre>@param phone\n@route /history/h/encaisser ...</pre>\n"],["encode","Parametre::Crypto","Parametre/Crypto.html#method-c-encode","(chaine)","<p>ENCODE EN BASE 64\n\n<pre>@param [Object] chaine</pre>\n"],["errors","App::Messages::Authentication","App/Messages/Authentication.html#method-c-errors","()",""],["evolve","Abonnements::Abonnements","Abonnements/Abonnements.html#method-c-evolve","(palier_id, customer_id)","<p>Passer d&#39;un Palier inferieur à un palier superieur, permet de faire une\nevolution, tout en sachant …\n"],["find_client","Client","Client.html#method-c-find_client","(customer_id)","<p>RECHERCHE D&#39;UN CLIENT SUR LA PLATEFORME\n\n<pre>@param [Object] customer_id\n@author @mvondoyannick\n@version ...</pre>\n"],["find_marchand","Client","Client.html#method-c-find_marchand","(id)","<p>RECHERCHE LE RECEVEUR OU LE MARCHAND @param [Integer] id @author\n@mvondoyannick @version 1.0.0\n"],["formatLogger","Logger","Logger.html#method-c-formatLogger","(tate, c_phone, c_name, m_name, m_phone, amount, context)",""],["generalNotification","OneSignal::OneSignalSend","OneSignal/OneSignalSend.html#method-c-generalNotification","(msg)","<p>message generale aux client payquick\n"],["generate","Parametre::USSD","Parametre/USSD.html#method-c-generate","()","<p>permet de generer le code USSD\n"],["generateQRCode","AgentcrtlController","AgentcrtlController.html#method-i-generateQRCode","()","<p>generate QR code and save from database on table\n"],["generate_code","Customer","Customer.html#method-i-generate_code","()","<p>permet de generer le code/ MIN si et seulement s&#39;il n&#39;existe pas\n"],["genericOneSignal","OneSignal::OneSignalSend","OneSignal/OneSignalSend.html#method-c-genericOneSignal","(playerId, msgFr=nil , msgEn=nil )","<p>distance superieur a ce qui est demandée\n\n<pre>@param [Object] playerId\n@param [Object] msgFr\n@param [Object] ...</pre>\n"],["geocoder_search","DistanceMatrix::DistanceMatrix","DistanceMatrix/DistanceMatrix.html#method-c-geocoder_search","(lat, lon)","<p>retourn l&#39;adresse en fonction de la latitude et de la longitude\n\n<pre>@param [Object] lat\n@param [Object] ...</pre>\n"],["getAccountBalance","Eu::EuApi","Eu/EuApi.html#method-c-getAccountBalance","()","<p>Obtiention du solde du compte\n"],["getPaymentStatus","Eu::EuApi","Eu/EuApi.html#method-c-getPaymentStatus","(phone, billno)","<p>permet d&#39;evoir le status du paiement\n\n<pre>@param [Object] phone\n@param [Object] billno</pre>\n"],["getPhoneNumber","Api::V1::SessionController","Api/V1/SessionController.html#method-i-getPhoneNumber","()","<p>RENDER CUSTOMER PHONE WITH HEADER\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@deprecated</span>\n</pre>\n"],["getSoldeCustomer","Api::V1::SessionController","Api/V1/SessionController.html#method-i-getSoldeCustomer","()",""],["getSpData","Api::V1::SessionController","Api/V1/SessionController.html#method-i-getSpData","()","<p>IDENTIFICATION DES DONN2ES DE RECHARGES RECU PAR LE CLIENT\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@return</span> [<span class=\"ruby-constant\">Object</span>]\n</pre>\n"],["get_account","Parametre::Parametre","Parametre/Parametre.html#method-c-get_account","(id)","<p>INFORMATION DU CONSOMMATEUR\n\n<pre>@param [Object] id</pre>\n"],["get_all_question","CustomerClient::Client","CustomerClient/Client.html#method-c-get_all_question","()","<p>retourner toutes les questions au client mobile\n"],["get_balance","Api::V1::SessionController","Api/V1/SessionController.html#method-i-get_balance","()","<p>CUSTOMER ACCOUNT BALANCE\n"],["get_balance","Client","Client.html#method-c-get_balance","(argv, message=nil , locale)","<p>OBTENIR LE SOLDE DU COMPTE\n\n<pre>@name\n@detail\n@param [Object] tel\n@param [Object] password\n@return [Object] ...</pre>\n"],["get_balance_retrait","Client","Client.html#method-c-get_balance_retrait","(phone, amount_retrait)","<p>VERIFIER SI LE CLIENT DISPOSE DU SOLDE SUFFISA?T DANS SON COMPTE POUR\nEFFECTUER LA TRANSACTION\n\n<pre>@method ...</pre>\n"],["get_customer","CustomerClient::Client","CustomerClient/Client.html#method-c-get_customer","(phone)",""],["get_customer","Parametre::Parametre","Parametre/Parametre.html#method-c-get_customer","(phone)","<p>RETOURN LES INFORMATIONS SUR UN CUSTOMER\n\n<pre>@param [Object] phone</pre>\n"],["get_distance","DistanceMatrix::DistanceMatrix","DistanceMatrix/DistanceMatrix.html#method-c-get_distance","(lat1, long1, lat2, long2)",""],["get_entreprise","Entreprise::Entreprise","Entreprise/Entreprise.html#method-c-get_entreprise","(pin)",""],["get_entreprise_account","Entreprise::Entreprise","Entreprise/Entreprise.html#method-c-get_entreprise_account","()","<p>retourne une entreprise si elle existe\n"],["get_question","CustomerClient::Client","CustomerClient/Client.html#method-c-get_question","(id)","<p>retourn une question specifique\n"],["get_user_history","Logstory::Histo","Logstory/Histo.html#method-c-get_user_history","(phone)",""],["h_customer","Logstory::Histo","Logstory/Histo.html#method-c-h_customer","(token, period, locale)","<p>Historique journalier d&#39;un customer\n\n<pre>@param [String] token\n@param [String] period</pre>\n"],["h_interval","Logstory::Histo","Logstory/Histo.html#method-c-h_interval","(argv, locale)","<p>Get history with beginning and end period @calling\nLostory::Histo.h_interval(token: @token, debut: @debut, …\n"],["hashAmount","Client","Client.html#method-c-hashAmount","(amount)","<p>Permet de hacher le montant\n"],["headers","ContactForm","ContactForm.html#method-i-headers","()","<p>Declare the e-mail headers. It accepts anything the mail method in\nActionMailer accepts.\n"],["histo","Api::V1::SessionController","Api/V1/SessionController.html#method-i-histo","()","<p>CUSTOMER HISTORY\n\n<pre>DEPRECATED\nTODO Remove this method on next release, deprecatd since 0.1.2</pre>\n"],["histoDetail","Api::V1::SessionController","Api/V1/SessionController.html#method-i-histoDetail","()","<p>CUSTOMER ALL HISTORY SINCE BEGINING\n\n<pre>Detail de l&#39;historiqueAnswer.all\nTODO deprecated, remove this method ...</pre>\n"],["historique","P::Guichet","P/Guichet.html#method-c-historique","()","<p>Historique de chaque guichet\n"],["historique","Partenaire::Guichet","Partenaire/Guichet.html#method-c-historique","()","<p>Historique de chaque guichet\n"],["history","Api::V1::CustomerController","Api/V1/CustomerController.html#method-i-history","()",""],["history","Api::V1::SessionController","Api/V1/SessionController.html#method-i-history","()","<p>retourne les informations de la semaine entre le début de la semaine et la\nfin de la semaine\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Refactoring</span>\n</pre>\n"],["history","CustomerDesktop::Client","CustomerDesktop/Client.html#method-c-history","(token)","<p>@param [Object] token\n"],["history","Logstory::Histo","Logstory/Histo.html#method-c-history","(marchand, customer, amount, context, flag, code_transaction)","<p>permet de creer l&#39;historique des transactions\n"],["historyByDate","Api::V1::SessionController","Api/V1/SessionController.html#method-i-historyByDate","()","<p>CUSTOMER PERIOD HISTORY\n\n<pre>Permet de retourner le&#39;historique en fonction d&#39;une periode bien precise</pre>\n"],["historyLog","Logstory::Histo","Logstory/Histo.html#method-c-historyLog","(argv, acttive=true)",""],["history_period","CustomerDesktop::Client","CustomerDesktop/Client.html#method-c-history_period","(phone, start_date, end_date)","<p>retourne mes informations sur l&#39;historique en fonction des periodes\n\n<pre>@param [Object] phone\n@param [Object] ...</pre>\n"],["home","WelcomeController","WelcomeController.html#method-i-home","()",""],["includeKey","SprintPay::Pay::Payment","SprintPay/Pay/Payment.html#method-c-includeKey","()","<p>inclussion test\n"],["index","AccountsController","AccountsController.html#method-i-index","()","<p>GET /accounts GET /accounts.json\n"],["index","AgentcrtlController","AgentcrtlController.html#method-i-index","()",""],["index","CategorieServicesController","CategorieServicesController.html#method-i-index","()","<p>GET /categorie_services GET /categorie_services.json\n"],["index","CategoriesController","CategoriesController.html#method-i-index","()","<p>GET /categories GET /categories.json\n"],["index","CatsController","CatsController.html#method-i-index","()","<p>GET /cats GET /cats.json\n"],["index","ClientController","ClientController.html#method-i-index","()",""],["index","HomeController","HomeController.html#method-i-index","()","<p>multiple layout layout :choose_layout\n"],["index","ParametresController","ParametresController.html#method-i-index","()",""],["index","RolesController","RolesController.html#method-i-index","()","<p>GET /roles GET /roles.json\n"],["index","ServicesController","ServicesController.html#method-i-index","()","<p>GET /services GET /services.json\n"],["index","TypesController","TypesController.html#method-i-index","()","<p>GET /types GET /types.json\n"],["index","UsersController","UsersController.html#method-i-index","()","<p>GET /users GET /users.json\n"],["inialize","CustomerDesktop::Client","CustomerDesktop/Client.html#method-i-inialize","()",""],["init_retrait","Client","Client.html#method-c-init_retrait","(phone, amount, agent)","<p>INITIALISATION DE LA PROCEDURE DE RETRAIT\n\n<pre>@method name  Get Balance before retrait\n@name         Client::init_retrait ...</pre>\n"],["intend_qrcode","AgentcrtlController","AgentcrtlController.html#method-i-intend_qrcode","()","<p>permet de generer le qrcode et de recuperer le chemin\n"],["intent_credit_customer","AgentcrtlController","AgentcrtlController.html#method-i-intent_credit_customer","()","<p>intention de credit du compte client\n"],["intent_debit_customer","AgentcrtlController","AgentcrtlController.html#method-i-intent_debit_customer","()","<p>intention de retirer le credit dans le compte client\n"],["intent_new_customer","AgentcrtlController","AgentcrtlController.html#method-i-intent_new_customer","()","<p>intention de creation d&#39;un nouveau customer\n"],["isFraud?","Client","Client.html#method-c-isFraud-3F","(phone, sim_phone, network_operator, uuid, imei)","<p>VERIFICATION DE LA FRAUDE SUR LA PLATEFORME\n\n<pre>@name     isFraud\n@detail   Permt de determiner d&#39;eventuel ...</pre>\n"],["isLock?","Client","Client.html#method-c-isLock-3F","(token)","<p>VERIFICATION DU STATUT D&#39;UN COMPTE Bloquer|voler|desactiver|autre\n\n<pre>@name\n@detail   permet de verifier ...</pre>\n"],["is_await_valid?","Client","Client.html#method-c-is_await_valid-3F","(phone)","<p>VERIFICATION INTENT DE RETRAIT EST PERIME – OU PAS\n\n<pre>@method     name Verifier sur une procedure de retrait ...</pre>\n"],["is_complete?","AgentcrtlController","AgentcrtlController.html#method-i-is_complete-3F","(phone)","<p>Permet de verifier si l&#39;utilisateur est finalisé ou pas\n"],["is_customer?","CustomerDesktop::Client","CustomerDesktop/Client.html#method-c-is_customer-3F","(phone)","<p>permet de chercher un web customer\n"],["is_enterprise_exist?","P::Authenticate","P/Authenticate.html#method-c-is_enterprise_exist-3F","(name)","<p>permet de verifier qu&#39;en entreprise existe\n\n<pre>@param [Object] name\n@return [Object]</pre>\n"],["is_user_exist?","P::Authenticate","P/Authenticate.html#method-c-is_user_exist-3F","()","<p>permet de rechercher une entreprise\n"],["journal","AgentcrtlController","AgentcrtlController.html#method-i-journal","()","<p>pour le journal d&#39;activité de la plateforme\n"],["journal","Api::V1::AgentController","Api/V1/AgentController.html#method-i-journal","()",""],["journal","ParametresController","ParametresController.html#method-i-journal","()","<p>permet d&#39;afficher le journale\n"],["key","App::PayMeQuick::App","App/PayMeQuick/App.html#method-c-key","()","<p>retourne la clé secrete\n"],["keys","SprintPay::V2::SP","SprintPay/V2/SP.html#method-i-keys","()",""],["lang","Lorem","Lorem.html#method-c-lang","(locale)",""],["lastCniChar","Parametre::ForgotPassword","Parametre/ForgotPassword.html#method-c-lastCniChar","(phone, lastCni)",""],["limit","App::PayMeQuick::App","App/PayMeQuick/App.html#method-c-limit","()","<p>All limites are define here, for customer who don&#39;t have account\n"],["limitLoginAttempt","Fraud::Customer","Fraud/Customer.html#method-c-limitLoginAttempt","(customer, password)","<p>LIMIT LOGIN TENTATIVE @param [String] customer @param [String] password\n@return [Object] Object\n"],["link","Api::V1::AgentController","Api/V1/AgentController.html#method-i-link","()","<p>permet de lier un compte a un qrcode\n"],["list","Abonnements::Abonnements","Abonnements/Abonnements.html#method-c-list","()","<p>Permet de lister tous les abonnements disponible\n"],["list","PayLib::CustomerPaymentSolution","PayLib/CustomerPaymentSolution.html#method-c-list","(token)","<p>LISTE CUSTOMER PAYMENT SOLUTION @param [Integer] customer_id @return\n[Object] list\n"],["list","PayLib::PaymentSolution","PayLib/PaymentSolution.html#method-c-list","()","<p>LIST ALL PAYMENT SOLUTIONS AVAILABLE\n"],["lock","Agents::Auth","Agents/Auth.html#method-c-lock","()",""],["lock","GestionEntreprise::Agence","GestionEntreprise/Agence.html#method-i-lock","()","<p>Bloquer une agence\n"],["lock","P::Authenticate","P/Authenticate.html#method-c-lock","(token, motif)","<p>Bloquer un agent\n"],["lock","P::Guichet","P/Guichet.html#method-c-lock","()","<p>Bloquer une guichet\n"],["lock","Partenaire::Authenticate","Partenaire/Authenticate.html#method-c-lock","()","<p>Bloquer un agent\n"],["lock","Partenaire::Guichet","Partenaire/Guichet.html#method-c-lock","()","<p>Bloquer une guichet\n"],["lock","PayLib::CustomerPaymentSolution","PayLib/CustomerPaymentSolution.html#method-c-lock","(args)","<p>BLOQUER UNE SOLUTION DE PAIEMENT PAR UN UTILISATEUR\n"],["lock","PayLib::PaymentSolution","PayLib/PaymentSolution.html#method-c-lock","()","<p>LOCK PAYMENT SOLUTION\n"],["lockCustomerAccount","Client","Client.html#method-c-lockCustomerAccount","(phone, motif)","<p>BLOCAGE D&#39;UN COMPTE UTILISATEUR SUR LA PLATEFORME\n\n<pre>@description\n@name\n@detail\n@param [Object] phone ...</pre>\n"],["lockCustomerAccount","Parametre::SecurityQuestion","Parametre/SecurityQuestion.html#method-c-lockCustomerAccount","(customer_id)","<p>permet de bloquer un compte client @detail     une fois que l&#39;on\ndemande son mot de passe, le compte …\n"],["lock_customer_account","AgentcrtlController","AgentcrtlController.html#method-i-lock_customer_account","()","<p>Bloquer un compte ayants=signaler des problemes\n"],["log_login","Journal::Journal","Journal/Journal.html#method-c-log_login","(phone, android, lat, lon)",""],["login","HomeController","HomeController.html#method-i-login","()",""],["maps","GestionEntreprise::Agence","GestionEntreprise/Agence.html#method-i-maps","()",""],["merchant_can_receive?","PayMeQuick::Payment","PayMeQuick/Payment.html#method-c-merchant_can_receive-3F","(argv, message=nil)","<p>VERIFY IF MERCHANT CAN RECEIVE PAYMENT TRANSACTION\n\n<pre>@param [Object] argv\n@param [String] message\n@return ...</pre>\n"],["merchant_is_demo_user?","PayMeQuick::Payment","PayMeQuick/Payment.html#method-c-merchant_is_demo_user-3F","(merchant, message=nil)","<p>CHECK IF MERCHANT IS A DEMO ACCOUNT, ACCOUNT WITH TYPE ID=2\n\n<pre>@param [String] merchant\n@param [String] message ...</pre>\n"],["message","App::Messages::Authentication","App/Messages/Authentication.html#method-c-message","()",""],["montantInferieur","OneSignal::OneSignalSend","OneSignal/OneSignalSend.html#method-c-montantInferieur","(playerId, user, amount)","<p>montant de le compte est insuffisant\n\n<pre>@param [Object] playerId\n@param [Object] user\n@param [Integer] amount</pre>\n"],["mppp","Sms","Sms.html#method-c-mppp","(msg)",""],["mtn","SprintPay::Pay::Payment","SprintPay/Pay/Payment.html#method-c-mtn","()","<p>ENVOI D UN MOMO VERS LES CLIENTS MTN MOBILE MONEY\n"],["new","AccountsController","AccountsController.html#method-i-new","()","<p>GET /accounts/new\n"],["new","AgentcrtlController","AgentcrtlController.html#method-i-new","()",""],["new","CategorieServicesController","CategorieServicesController.html#method-i-new","()","<p>GET /categorie_services/new\n"],["new","CategoriesController","CategoriesController.html#method-i-new","()","<p>GET /categories/new\n"],["new","CatsController","CatsController.html#method-i-new","()","<p>GET /cats/new\n"],["new","Client","Client.html#method-c-new","(from, to, amount, pwd)","<p>@param [Object] from @param [Object] to @param [Object] amount @param\n[Object] pwd @return [Object] nil …\n"],["new","Entreprise::Sms","Entreprise/Sms.html#method-c-new","(phone, message)",""],["new","Eu::EuApi","Eu/EuApi.html#method-c-new","(amount, name, phone, custid, label)",""],["new","Eu::EuPartner","Eu/EuPartner.html#method-c-new","()",""],["new","GestionEntreprise::Agence","GestionEntreprise/Agence.html#method-c-new","()",""],["new","Journal::Journal","Journal/Journal.html#method-c-new","(attribute)",""],["new","Logstory::Histo","Logstory/Histo.html#method-c-new","(marchand, customer, amount, context, flag)",""],["new","P::Authenticate","P/Authenticate.html#method-c-new","(arg)",""],["new","P::Authorize","P/Authorize.html#method-c-new","()",""],["new","P::Guichet","P/Guichet.html#method-c-new","()",""],["new","P::Search","P/Search.html#method-c-new","()",""],["new","Parametre::CleanAccounts","Parametre/CleanAccounts.html#method-c-new","()","<p>permet de nettoyer les comptes inutiliser\n"],["new","Parametre::ForgotPassword","Parametre/ForgotPassword.html#method-c-new","()","<p>recuperation du mot de passe\n"],["new","Parametre::Security","Parametre/Security.html#method-c-new","()",""],["new","Parametre::SecurityQuestion","Parametre/SecurityQuestion.html#method-c-new","()",""],["new","Parametre::USSD","Parametre/USSD.html#method-c-new","(phone, content)",""],["new","Partenaire::Authenticate","Partenaire/Authenticate.html#method-c-new","(arg)",""],["new","Partenaire::Authorize","Partenaire/Authorize.html#method-c-new","()",""],["new","Partenaire::Guichet","Partenaire/Guichet.html#method-c-new","()",""],["new","Partenaire::Search","Partenaire/Search.html#method-c-new","()",""],["new","PartnersPlateform::Client","PartnersPlateform/Client.html#method-c-new","(phone)",""],["new","PartnersPlateform::Partner","PartnersPlateform/Partner.html#method-c-new","(phone, password, rib)",""],["new","RolesController","RolesController.html#method-i-new","()","<p>GET /roles/new\n"],["new","ServicesController","ServicesController.html#method-i-new","()","<p>GET /services/new\n"],["new","SetAccount","SetAccount.html#method-c-new","(user_id)",""],["new","Sms","Sms.html#method-c-new","(phone, message)",""],["new","SprintPay::Check::CheckPhone","SprintPay/Check/CheckPhone.html#method-c-new","(*args)",""],["new","SprintPay::Pay::Payment","SprintPay/Pay/Payment.html#method-c-new","(phone, amount)",""],["new","Transactions","Transactions.html#method-c-new","(marchand, customer, amount, context, flag)",""],["new","TypesController","TypesController.html#method-i-new","()","<p>GET /types/new\n"],["new","UsersController","UsersController.html#method-i-new","()","<p>GET /users/new\n"],["new_alerte","OneSignal::OneSignalSend","OneSignal/OneSignalSend.html#method-c-new_alerte","(service, alert_id)","<p>nouvelle alerte pour les partenaires\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">send_alertes</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">all</span> <span class=\"ruby-identifier\">users</span> <span class=\"ruby-identifier\">who</span> <span class=\"ruby-identifier\">has</span> <span class=\"ruby-identifier\">subscribing</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">plateform</span> <span class=\"ruby-identifier\">app</span> <span class=\"ruby-identifier\">android</span>\n</pre>\n"],["new_customer","AgentcrtlController","AgentcrtlController.html#method-i-new_customer","()","<p>ajout de nouveau client sur la plateforme\n"],["new_customer","Api::V1::AgentController","Api/V1/AgentController.html#method-i-new_customer","()",""],["new_customer","P::Authenticate","P/Authenticate.html#method-c-new_customer","(name, second_name, phone, cni, agent_id)",""],["new_qrcode","AgentcrtlController","AgentcrtlController.html#method-i-new_qrcode","()",""],["nexah","Sms","Sms.html#method-c-nexah","(phone, msg)","<p>using nexah SMS plateform\n"],["notPayToMe","OneSignal::OneSignalSend","OneSignal/OneSignalSend.html#method-c-notPayToMe","(playerId, user)","<p>On ne peut pas se payer a sois meme\n\n<pre>@param [Object] playerId\n@param [Object] user</pre>\n"],["notify","ApiMailer","ApiMailer.html#method-i-notify","(message, phone, date, errors)","<p>mailler generique pour toutes actions\n\n<pre>@param [Object] message\n@param [Object] phone\n@param [Object] date ...</pre>\n"],["notifyAdmin","ApiMailer","ApiMailer.html#method-i-notifyAdmin","()",""],["notifyAdmin","ApiMailerPreview","ApiMailerPreview.html#method-i-notifyAdmin","()",""],["numeroCameroun","Parametre::PersonalData","Parametre/PersonalData.html#method-c-numeroCameroun","(phone)","<p>recherche des plages de numeros de telephone @param [Integer] phone @return\n[Object] string\n"],["numeroOperateurMobile","Parametre::PersonalData","Parametre/PersonalData.html#method-c-numeroOperateurMobile","(phone)","<p>recherche des plages de numeros de telephone @param [Integer] phone @return\n[Object] string\n"],["om","SprintPay::Pay::Payment","SprintPay/Pay/Payment.html#method-c-om","()","<p>Permet de paiement vers orange money  &mdash; REFACTORING\n\n"],["orange","SprintPay::Pay::Payment","SprintPay/Pay/Payment.html#method-c-orange","()","<p>ENVOI OM VERS CLIENTS ORANGE MONEY\n"],["p","Api::V1::SessionController","Api/V1/SessionController.html#method-i-p","()","<p>RENDER HISTORY\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@deprecated</span>\n</pre>\n"],["parameters","ClientController","ClientController.html#method-i-parameters","()",""],["particulier","HomeController","HomeController.html#method-i-particulier","()",""],["partnerAuthenticate","PartnersPlateform::Partner","PartnersPlateform/Partner.html#method-c-partnerAuthenticate","()",""],["partner_customer","P::Authenticate","P/Authenticate.html#method-c-partner_customer","(name, second_name, phone, cni, sexe)","<p>creation d&#39;un customer par un partenaire\n\n<pre>@param [Object] name\n@param [Object] second_name\n@param [Object] ...</pre>\n"],["partner_verify","P::Authenticate","P/Authenticate.html#method-c-partner_verify","(partner_id)","<p>permet de verifier le partenaire en question avant de faire toute operation\n\n<pre>@param [Object] partner_id</pre>\n"],["password","Agents::Auth","Agents/Auth.html#method-c-password","()","<p>permet de retrouver son mot de passe\n"],["passwordValidation","Fraud::Customer","Fraud/Customer.html#method-c-passwordValidation","(password)","<p>CHECK FRAUD ON CUSTOMER PASSWORD @param [String] password @return [Boolean]\nboolean @version 1.0.0\n"],["pay","Client","Client.html#method-c-pay","(argv, message=nil, locale=\"fr\")","<p>PERMET D EFFECTUER UN PAIEMENT D&#39;UN CLIENT A UN AUTRE CLIENT\n\n<pre>@method name  Pay\n@name         Client::pay ...</pre>\n"],["pay","CustomerClient::PayWithCode","CustomerClient/PayWithCode.html#method-c-pay","()",""],["pay","Eu::EuApi","Eu/EuApi.html#method-c-pay","(ref, phone, amount, name)","<p>permet d&#39;envoyer une requete de payement\n"],["pay","Parametre::USSD","Parametre/USSD.html#method-c-pay","()","<p>payer en USSD uniquement\n"],["payUssd","Parametre::PersonalData","Parametre/PersonalData.html#method-c-payUssd","(token, marchand, amount, pasword)","<p>Paiement via USSD via Parametre::personalData::payUssd\n"],["payment","Api::V1::ApiController","Api/V1/ApiController.html#method-i-payment","()","<p>PAYMENT PROCESS\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@details</span>\n<span class=\"ruby-ivar\">@return</span> [<span class=\"ruby-constant\">Object</span>]\n<span class=\"ruby-constant\">TODO</span> <span class=\"ruby-identifier\">add</span> <span class=\"ruby-identifier\">token</span> <span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">filter</span> <span class=\"ruby-identifier\">params</span> <span class=\"ruby-identifier\">header</span> <span class=\"ruby-identifier\">before_action</span>\n</pre>\n"],["payment","Logstory::Histo","Logstory/Histo.html#method-c-payment","(phone)","<p>permet de faire l&#39;historique des payments entre clients\n\n<pre>@param phone\n@route /history/h/payment\n@method ...</pre>\n"],["payment","PayMeQuick::Payment","PayMeQuick/Payment.html#method-c-payment","(argv, message=nil, locale=\"en\")","<p>@param [Object] argv @param [String] message @param [String] locale\n"],["pays","DistanceMatrix::DistanceMatrix","DistanceMatrix/DistanceMatrix.html#method-c-pays","(ip)","<p>Permet de rechercher via l&#39;adresse IP\n\n<pre>@param [Object] ip</pre>\n"],["phonePayment","Api::V1::ApiController","Api/V1/ApiController.html#method-i-phonePayment","()","<p>PAY WITH PHONE NUMBER\n"],["prettyCallSexe","Client","Client.html#method-c-prettyCallSexe","(sexe)","<p>RETOURNE UNE APPELLATION CONVIVIALE DE L&#39;UTILISATEUR\n\n<pre>@param [String] sexe\n@version 1.0.1</pre>\n"],["private","HomeController","HomeController.html#method-i-private","()",""],["processFinalize","PartnersPlateform::Client","PartnersPlateform/Client.html#method-c-processFinalize","(cni)",""],["public","HomeController","HomeController.html#method-i-public","()",""],["qrcode","Api::V1::ApiController","Api/V1/ApiController.html#method-i-qrcode","()","<p>PAY WITH MERCHANT OR PHONE QRCODE\n"],["qrcode","Lorem","Lorem.html#method-c-qrcode","()",""],["query","VerifyController","VerifyController.html#method-i-query","()",""],["question","Api::V1::SessionController","Api/V1/SessionController.html#method-i-question","()","<p>RENDER QUESTIONS\n\n<pre>gestion des questions de securité\nretourne toutes les question de securité  dispnible ...</pre>\n"],["rapprochement","ParametresController","ParametresController.html#method-i-rapprochement","()","<p>permet d&#39;afficher le rapprochement bancaire\n"],["read","Parametre::Profiles","Parametre/Profiles.html#method-c-read","(argv, message)","<p>Read profile content for this customer @param [Object] argv @param [String]\nmessage\n"],["rechargeSprintPay","Api::V1::SessionController","Api/V1/SessionController.html#method-i-rechargeSprintPay","()","<p>CREDIT PMQ WITH ORANGE MONEY | SPRINTPAY API\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@return</span> [<span class=\"ruby-constant\">Object</span>]\n</pre>\n"],["recovery","PartnersPlateform::Client","PartnersPlateform/Client.html#method-c-recovery","()",""],["register","Logger","Logger.html#method-c-register","(date, c_phone, c_name, m_name, m_phone, amount, context, flag)","<p>permet d&#39;enregistre l&#39;historique d&#39;une transaction\n"],["register","Transactions","Transactions.html#method-c-register","()",""],["release","Entreprise::Manage","Entreprise/Manage.html#method-c-release","(pin, motif)","<p>relache une entreprise suspendu\n"],["resend","Sms","Sms.html#method-c-resend","()",""],["resetPassword","Api::V1::SessionController","Api/V1/SessionController.html#method-i-resetPassword","()","<p>RESET CUSTOMER PASSWORD\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">permet</span>  <span class=\"ruby-identifier\">de</span> <span class=\"ruby-identifier\">reset</span> <span class=\"ruby-identifier\">le</span> <span class=\"ruby-identifier\">password</span>\n</pre>\n"],["resetPassword","Parametre::ForgotPassword","Parametre/ForgotPassword.html#method-c-resetPassword","(phone, question, answer)","<p>CREATION QUESTION DE SECURITE\n\n<pre>@param [Object] phone\n@param [Object] question\n@param [Object] answer</pre>\n"],["result","AgentcrtlController","AgentcrtlController.html#method-i-result","()","<p>resultat de la recherche lorsque l&#39;on veut bloquer\n"],["result_unlock","AgentcrtlController","AgentcrtlController.html#method-i-result_unlock","()","<p>resultat de la recherche lorsque l&#39;on veut debloquer\n"],["retrait","HomeController","HomeController.html#method-i-retrait","()",""],["retraitOneSignal","OneSignal::OneSignalSend","OneSignal/OneSignalSend.html#method-c-retraitOneSignal","(playerId, msgFr, msgEn)","<p>Notification de retrait d&#39;argent\n"],["retrait_intend","HomeController","HomeController.html#method-i-retrait_intend","()","<p>execution de la procedure de retrait effective\n"],["retrieve_password","CustomerClient::Client","CustomerClient/Client.html#method-c-retrieve_password","(phone, question, answer)","<p>retrouvons le mot de passe perdu/oublié du client\n"],["retrivePassword","Api::V1::SessionController","Api/V1/SessionController.html#method-i-retrivePassword","()","<p>RECUPERATION DU CUSTOMER PASSWORD\n\n<pre>recuperation du mot de passe perdu/oublié par le customer</pre>\n"],["saveHistory","Client","Client.html#method-c-saveHistory","(customer, code, flag, context, amount, ip, lat, lon)","<p>Permet d&#39;enregistrer une transaction de toutes les activités\n\n<pre>@param [Object] customer\n@param [Object] ...</pre>\n"],["search","Abonnements::Abonnements","Abonnements/Abonnements.html#method-c-search","(customer_id)","<p>Search customer Abonnement\n\n<pre>@param [Object] customer_id</pre>\n"],["search","AgentcrtlController","AgentcrtlController.html#method-i-search","()",""],["search","GestionEntreprise::Agence","GestionEntreprise/Agence.html#method-i-search","()",""],["search","Parametre::Profiles","Parametre/Profiles.html#method-c-search","(argv, message)","<p>Search if profile existe for this user @param [Object] argv @param [String]\nmessage\n"],["searchContext","Api::V1::ApiController","Api/V1/ApiController.html#method-i-searchContext","(obj)","<p>SEARCH QRCODE CONTEXT\n\n<pre>@param [Object] obj</pre>\n"],["searchCustomerByPhone","Api::V1::AgentController","Api/V1/AgentController.html#method-i-searchCustomerByPhone","()","<p>search customer by phone\n"],["searchGuichet","P::Search","P/Search.html#method-c-searchGuichet","()","<p>Rechercher un guichet\n"],["searchGuichet","Partenaire::Search","Partenaire/Search.html#method-c-searchGuichet","()","<p>Rechercher un guichet\n"],["searchOperator","P::Search","P/Search.html#method-c-searchOperator","()","<p>rechercher un operateur de la plateforme\n"],["searchOperator","Partenaire::Search","Partenaire/Search.html#method-c-searchOperator","()","<p>rechercher un operateur de la plateforme\n"],["searchQrCodeByScan","Api::V1::AgentController","Api/V1/AgentController.html#method-i-searchQrCodeByScan","()","<p>search by scan\n"],["searchQrcodeByCode","Api::V1::AgentController","Api/V1/AgentController.html#method-i-searchQrcodeByCode","()","<p>search qrcode code\n"],["search_customer","Api::V1::AgentController","Api/V1/AgentController.html#method-i-search_customer","()",""],["search_phone","AgentcrtlController","AgentcrtlController.html#method-i-search_phone","()","<p>resultat de la recherche du numero de telephone du compte\n"],["secure3d","Parametre::Security","Parametre/Security.html#method-c-secure3d","(argv, message)","<p>@param [Object] argv @param [Object] message\n"],["send","Entreprise::Sms","Entreprise/Sms.html#method-c-send","(pin)","<p>envoyer le message uniquement si c&#39;est une entreprise\n"],["send","Sms","Sms.html#method-c-send","()",""],["send","SprintPay::Pay::Payment","SprintPay/Pay/Payment.html#method-c-send","(body, url)","<p>ENVOI\n\n<pre>@param [Object] body\n@param [Object] url</pre>\n"],["sendAdmin","ApiMailer","ApiMailer.html#method-i-sendAdmin","(message)","<p>envoyer les message a l&#39;adminstrateur\n"],["sendEmail","OneSignal::SendEmailAPI","OneSignal/SendEmailAPI.html#method-c-sendEmail","(receiver, argv, message=nil, locale=\"en\")",""],["sendNotification","OneSignal::OneSignalSend","OneSignal/OneSignalSend.html#method-c-sendNotification","(playerId, amount, merchant, customer)","<p>recuperer l&#39;id du telephone\n\n<pre>@param [OneSignalObject] playerId\n@param [IntegerObject] amount\n@param ...</pre>\n"],["sendPaymentRequest","Eu::EuApi","Eu/EuApi.html#method-c-sendPaymentRequest","(phone, amount)","<p>Envoi d&#39;une requet de paiement EU\n\n<pre>@param [Object] amount\n@param [Object] phone</pre>\n"],["send_push","OneSignal::OneSignalSend","OneSignal/OneSignalSend.html#method-c-send_push","(body)",""],["sender","Sms","Sms.html#method-c-sender","(phone, message)",""],["service","Api::V1::SessionController","Api/V1/SessionController.html#method-i-service","()","<p>RENDER SERVICE FROM CATEGORIES\n"],["serviceCategorie","Api::V1::SessionController","Api/V1/SessionController.html#method-i-serviceCategorie","()","<p>RENDER CATEGORIES\n"],["setCommission","Parametre::Parametre","Parametre/Parametre.html#method-c-setCommission","(montant_vente)","<p>CALCUL DE LA COMMISSION\n\n<pre>@param [Object] montant_vente</pre>\n"],["setMontantARetirer","Parametre::Parametre","Parametre/Parametre.html#method-c-setMontantARetirer","(montant_vente)","<p>CALCUL DU MONTANT A RETIRER\n\n<pre>@param [Object] montant_vente</pre>\n"],["setPersonalData","Parametre::PersonalData","Parametre/PersonalData.html#method-c-setPersonalData","(customer, phone, phone_sim, network_operator, uuid, imei, latitude, longitude, ip)","<p>@param [Object] customer @param [Object] phone @param [Object] phone_sim\n@param [Object] network_operator …\n"],["setSecurityQuestion","Parametre::SecurityQuestion","Parametre/SecurityQuestion.html#method-c-setSecurityQuestion","(customer_id, question_id, answer)","<p>creatrion d&#39;une question de securité\n\n<pre>@name\n@detail\n@param [Object] customer_id\n@param [Object] question_id ...</pre>\n"],["show","AccountsController","AccountsController.html#method-i-show","()","<p>GET /accounts/1 GET /accounts/1.json\n"],["show","CategorieServicesController","CategorieServicesController.html#method-i-show","()","<p>GET /categorie_services/1 GET /categorie_services/1.json\n"],["show","CategoriesController","CategoriesController.html#method-i-show","()","<p>GET /categories/1 GET /categories/1.json\n"],["show","CatsController","CatsController.html#method-i-show","()","<p>GET /cats/1 GET /cats/1.json\n"],["show","RolesController","RolesController.html#method-i-show","()","<p>GET /roles/1 GET /roles/1.json\n"],["show","ServicesController","ServicesController.html#method-i-show","()","<p>GET /services/1 GET /services/1.json\n"],["show","TypesController","TypesController.html#method-i-show","()","<p>GET /types/1 GET /types/1.json\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /users/1 GET /users/1.json\n"],["signied","P::Authenticate","P/Authenticate.html#method-c-signied","(email, password)","<p>Authentification sur la plateforme\n\n<pre>@param [Object] email\n@param [Object] password\n@return [Object]</pre>\n"],["signin","AgentcrtlController","AgentcrtlController.html#method-i-signin","()","<p>login partenaire\n"],["signin","Agents::Auth","Agents/Auth.html#method-c-signin","(phone, password)",""],["signin","Api::V1::AgentController","Api/V1/AgentController.html#method-i-signin","()","<p>authenticate agent/partenaire\n"],["signin","Api::V1::CustomerController","Api/V1/CustomerController.html#method-i-signin","()","<p>controller entierement dedier à la gestion des clients en ligne\n"],["signin","Api::V1::SessionController","Api/V1/SessionController.html#method-i-signin","()","<p>AUTHENTICATE CUSTOMER\n"],["signin","Client","Client.html#method-c-signin","(argc, locale, message)","<p>AUTHENTIFICATION-CONNEXION D&#39;UN UTILISATEUR SUR LA PLATEFORME\n\n<pre>@name Client::signin\n@author @mvondoyannick ...</pre>\n"],["signin","CustomerDesktop::Client","CustomerDesktop/Client.html#method-c-signin","(email, password)",""],["signin","Partenaire::Authenticate","Partenaire/Authenticate.html#method-c-signin","(email, password)","<p>Authentification sur la plateforme\n"],["signing","ClientController","ClientController.html#method-i-signing","()",""],["signup","Agents::Auth","Agents/Auth.html#method-c-signup","()",""],["signup","Api::V1::CustomerController","Api/V1/CustomerController.html#method-i-signup","()",""],["signup","Api::V1::SessionController","Api/V1/SessionController.html#method-i-signup","()","<p>CREATE CUSTOMER ACCOUNTpassword\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@return</span> [<span class=\"ruby-constant\">Object</span>]\n</pre>\n"],["signup","Client","Client.html#method-c-signup","(argv, message, locale)","<p>CREATION DU COMPTE CLIENT  &mdash; refactoring\n\n\n<pre>@param [String] name\n@param [String] second_name\n@param [Integer] ...</pre>\n"],["signup","ClientController","ClientController.html#method-i-signup","()","<p>register new account\n"],["signup","HomeController","HomeController.html#method-i-signup","()",""],["signup","P::Authenticate","P/Authenticate.html#method-c-signup","(name, second_name, sexe, phone, email, enterprise_name, password, document)","<p>Creation de compte sur la plateforme\n\n<pre>@param [Object] name\n@param [Object] second_name\n@param [Object] ...</pre>\n"],["signup","Partenaire::Authenticate","Partenaire/Authenticate.html#method-c-signup","()","<p>Creation de compte sur la plateforme\n"],["signupFail","ApiMailer","ApiMailer.html#method-i-signupFail","(message, phone, date, errors)","<p>Echec de la creation du compte PAYQUICK\n\n<pre>@param [Object] message\n@param [Object] phone\n@param [Object] ...</pre>\n"],["signup_authentication","Api::V1::SessionController","Api/V1/SessionController.html#method-i-signup_authentication","()","<p>VALIDATE SIGNUP SMS AUTHENTICATION WITH ONE TIME PASSWORD\n\n<pre>validation de 2FA</pre>\n"],["sms_to_many","Sms","Sms.html#method-c-sms_to_many","(argv, message=\"empty SMS\")","<p>Send notification to many users @param [Object] argv\n"],["solde","Api::V1::SessionController","Api/V1/SessionController.html#method-i-solde","()","<p>obtention du solde du compte client\n"],["soldeFinale","Parametre::Parametre","Parametre/Parametre.html#method-c-soldeFinale","(solde_initial, montant_a_retirer, montant_vente)","<p>OBTION DU SOLDE FINAL\n\n<pre>@param [Object] solde_initial\n@param [Object] montant_a_retirer\n@param [Object] ...</pre>\n"],["soldeTest","Parametre::Parametre","Parametre/Parametre.html#method-c-soldeTest","(solde_initial, montant_vente)","<p>SOLDE TEST\n\n<pre>@param [Object] solde_initial\n@param [Object] montant_vente</pre>\n"],["sp","SprintPay::Pay::Payment","SprintPay/Pay/Payment.html#method-c-sp","(token, phone, amount, network_name)","<p>viartual SprintLocalAPI\n"],["struture_params","P::Authenticate","P/Authenticate.html#method-i-struture_params","()",""],["success","App::Messages::Authentication","App/Messages/Authentication.html#method-c-success","()",""],["suspend","Entreprise::Manage","Entreprise/Manage.html#method-c-suspend","(pin, motif)","<p>suspend une entreprise\n"],["system!","Object","Object.html#method-i-system-21","(*args)",""],["testNetwork","Api::V1::SessionController","Api/V1/SessionController.html#method-i-testNetwork","()","<p>test de la connxino internet\n"],["textEuApi","Eu::EuApi","Eu/EuApi.html#method-c-textEuApi","(hash, id, pwd)","<p>Permet de tester un certain nombre de chose\n\n<pre>@param [Object] hash\n@param [Object] id\n@param [Object] pwd</pre>\n"],["transaction","Api::V1::SessionController","Api/V1/SessionController.html#method-i-transaction","()",""],["transaction","Transactions","Transactions.html#method-c-transaction","()","<p>permet de creer une transaction\n"],["transfert","Client","Client.html#method-c-transfert","(from, to, amount, password)","<p>@param [Object] from @param [Object] to @param [Object] amount @param\n[Object] password @author @mvondoyannick …\n"],["un_hash","ApplicationHelper","ApplicationHelper.html#method-i-un_hash","(amount)","<p>@param [String] amount\n"],["unlock","GestionEntreprise::Agence","GestionEntreprise/Agence.html#method-i-unlock","()",""],["unlock","P::Authenticate","P/Authenticate.html#method-c-unlock","()","<p>Debloquer un agent\n"],["unlock","P::Guichet","P/Guichet.html#method-c-unlock","()","<p>Debloquer un guichet\n"],["unlock","Partenaire::Authenticate","Partenaire/Authenticate.html#method-c-unlock","()","<p>Debloquer un agent\n"],["unlock","Partenaire::Guichet","Partenaire/Guichet.html#method-c-unlock","()","<p>Debloquer un guichet\n"],["unlockCustomerAccount","Parametre::SecurityQuestion","Parametre/SecurityQuestion.html#method-c-unlockCustomerAccount","(customer_id)","<p>debloquer le compte d&#39;un utilisateur\n"],["unlock_customer_account","AgentcrtlController","AgentcrtlController.html#method-i-unlock_customer_account","()","<p>debolquer une compte d&#39;un utilisateur precedement bloqué\n"],["update","AccountsController","AccountsController.html#method-i-update","()","<p>PATCH/PUT /accounts/1 PATCH/PUT /accounts/1.json\n"],["update","Api::V1::AgentController","Api/V1/AgentController.html#method-i-update","()","<p>permet la mise a jour des informations provenant du mobile des agents\n"],["update","CategorieServicesController","CategorieServicesController.html#method-i-update","()","<p>PATCH/PUT /categorie_services/1 PATCH/PUT /categorie_services/1.json\n"],["update","CategoriesController","CategoriesController.html#method-i-update","()","<p>PATCH/PUT /categories/1 PATCH/PUT /categories/1.json\n"],["update","CatsController","CatsController.html#method-i-update","()","<p>PATCH/PUT /cats/1 PATCH/PUT /cats/1.json\n"],["update","Parametre::Profiles","Parametre/Profiles.html#method-c-update","(argv, message)","<p>UPDATE CUSTOMER PROFILE\n"],["update","PartnersPlateform::Client","PartnersPlateform/Client.html#method-c-update","(*arg)",""],["update","PayLib::PaymentSolution","PayLib/PaymentSolution.html#method-c-update","()","<p>UPDATE PAYMENT SOLUTION\n"],["update","RolesController","RolesController.html#method-i-update","()","<p>PATCH/PUT /roles/1 PATCH/PUT /roles/1.json\n"],["update","ServicesController","ServicesController.html#method-i-update","()","<p>PATCH/PUT /services/1 PATCH/PUT /services/1.json\n"],["update","TypesController","TypesController.html#method-i-update","()","<p>PATCH/PUT /types/1 PATCH/PUT /types/1.json\n"],["update","UsersController","UsersController.html#method-i-update","()","<p>PATCH/PUT /users/1 PATCH/PUT /users/1.json\n"],["updateAccount","Api::V1::SessionController","Api/V1/SessionController.html#method-i-updateAccount","()","<p>Mise a jour des informations du compte utilisateur\n"],["updateDevice","Client","Client.html#method-c-updateDevice","(argc)","<p>UPDATE DEVICE NEW UUID CUSTOMER\n\n<pre>@param [Object] argc</pre>\n"],["updatePassword","Api::V1::SessionController","Api/V1/SessionController.html#method-i-updatePassword","()","<p>UPDATE CUSTOMER PASSWORD ACCOUNT\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Mettre</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">jour</span> <span class=\"ruby-identifier\">son</span> <span class=\"ruby-identifier\">mot</span> <span class=\"ruby-identifier\">de</span> <span class=\"ruby-identifier\">passe</span>\n</pre>\n"],["update_account_client","Client","Client.html#method-c-update_account_client","(id, amount)","<p>MISE A JOUR DES MONTANTS DU COMPTES\n\n<pre>@param [Object] id\n@param [Object] amount\n@return [Object]\n@author ...</pre>\n"],["update_account_marchand","Client","Client.html#method-c-update_account_marchand","(id, amount)","<p>MISE A JOUR DES MONTANTS DU COMPTE MARCHAND\n\n<pre>@param [Object] id\n@param [Object] amount\n@return [Object] ...</pre>\n"],["utilisateur","ParametresController","ParametresController.html#method-i-utilisateur","()","<p>permet la gestion des utilisateurs\n"],["validate_lock_customer_account","AgentcrtlController","AgentcrtlController.html#method-i-validate_lock_customer_account","()","<p>Permet de valider le blocage du customer\n"],["validate_otp","Parametre::Authentication","Parametre/Authentication.html#method-c-validate_otp","(phone, auth_key, playerId=nil)","<p>permet de valider un code OTP (One Time Password)\n\n<pre>@params   [object] phone\n@params   [object] auth_key ...</pre>\n"],["validate_retrait","Api::V1::SessionController","Api/V1/SessionController.html#method-i-validate_retrait","()","<p>VALIDATE CUSTOMER INTENT RETRAIT\n"],["validate_retrait","Client","Client.html#method-c-validate_retrait","(token, pwd)","<p>VALIDATION DU RETRAIT PAR LE CUSTOMER  &mdash; REFACTORING UPDATE\n\n\n<pre>@param [String] token\n@param [String] pwd\n@author ...</pre>\n"],["validate_signin","Api::V1::CustomerController","Api/V1/CustomerController.html#method-i-validate_signin","()",""],["verify","VerifyController","VerifyController.html#method-i-verify","()",""],["verifyPhone","SprintPay::Check::CheckPhone","SprintPay/Check/CheckPhone.html#method-c-verifyPhone","()","<p>TODO permet de verifier le numero de telephone\n"],["verify_amount","SprintPay::Check::CheckPhone","SprintPay/Check/CheckPhone.html#method-c-verify_amount","()","<p>TODO permet de verifier le montant\n"],["virtualSP","Api::V1::SessionController","Api/V1/SessionController.html#method-i-virtualSP","()","<p>mise en oeuvre du virtual SprintPayLocalAPI\n"],["webview","WelcomeController","WelcomeController.html#method-i-webview","()",""],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39; git_source(:github) { |repo|\n“github.com/#{repo}.git” }\n<p>ruby &#39;2.5.5&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  actioncable (5.2.3)\n    actionpack (= 5.2.3)\n    nio4r (~&gt; ...</pre>\n"],["README","","README_md.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get\nthe\napplication up and ...\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["jeu_test","","app/modules/jeu_test_md.html","","<p>Setting Up Fraud Management Filters\n<p>RESTRICTION DE MOT DE PASSE FACILE\n<p>Cette mise à jour fournir le support …\n"],["_account.json.jbuilder","","app/views/accounts/_account_json_jbuilder.html","","<p>json.extract! account, :id, :amount, :user_id, :created_at, :updated_at\njson.url account_url(account, …\n"],["index.json.jbuilder","","app/views/accounts/index_json_jbuilder.html","","<p>json.array! @accounts, partial: &#39;accounts/account&#39;, as: :account\n"],["show.json.jbuilder","","app/views/accounts/show_json_jbuilder.html","","<p>json.partial! “accounts/account”, account: @account\n"],["_categorie_service.json.jbuilder","","app/views/categorie_services/_categorie_service_json_jbuilder.html","","<p>json.extract! categorie_service, :id, :name, :detail, :created_at,\n:updated_at json.url categorie_service_url …\n"],["index.json.jbuilder","","app/views/categorie_services/index_json_jbuilder.html","","<p>json.array! @categorie_services, partial:\n&#39;categorie_services/categorie_service&#39;, as: :categorie_service …\n"],["show.json.jbuilder","","app/views/categorie_services/show_json_jbuilder.html","","<p>json.partial! “categorie_services/categorie_service”, categorie_service:\n@categorie_service …\n"],["_category.json.jbuilder","","app/views/categories/_category_json_jbuilder.html","","<p>json.extract! category, :id, :name, :detail, :created_at, :updated_at\njson.url category_url(category, …\n"],["index.json.jbuilder","","app/views/categories/index_json_jbuilder.html","","<p>json.array! @categories, partial: &#39;categories/category&#39;, as:\n:category\n"],["show.json.jbuilder","","app/views/categories/show_json_jbuilder.html","","<p>json.partial! “categories/category”, category: @category\n"],["_cat.json.jbuilder","","app/views/cats/_cat_json_jbuilder.html","","<p>json.extract! cat, :id, :name, :detail, :created_at, :updated_at json.url\ncat_url(cat, format: :json) …\n"],["index.json.jbuilder","","app/views/cats/index_json_jbuilder.html","","<p>json.array! @cats, partial: &#39;cats/cat&#39;, as: :cat\n"],["show.json.jbuilder","","app/views/cats/show_json_jbuilder.html","","<p>json.partial! “cats/cat”, cat: @cat\n"],["_role.json.jbuilder","","app/views/roles/_role_json_jbuilder.html","","<p>json.extract! role, :id, :name, :description, :created_at, :updated_at\njson.url role_url(role, format: …\n"],["index.json.jbuilder","","app/views/roles/index_json_jbuilder.html","","<p>json.array! @roles, partial: &#39;roles/role&#39;, as: :role\n"],["show.json.jbuilder","","app/views/roles/show_json_jbuilder.html","","<p>json.partial! “roles/role”, role: @role\n"],["_service.json.jbuilder","","app/views/services/_service_json_jbuilder.html","","<p>json.extract! service, :id, :name, :description, :created_at, :updated_at\njson.url service_url(service, …\n"],["index.json.jbuilder","","app/views/services/index_json_jbuilder.html","","<p>json.array! @services, partial: &#39;services/service&#39;, as: :service\n"],["show.json.jbuilder","","app/views/services/show_json_jbuilder.html","","<p>json.partial! “services/service”, service: @service\n"],["_type.json.jbuilder","","app/views/types/_type_json_jbuilder.html","","<p>json.extract! type, :id, :name, :description, :created_at, :updated_at\njson.url type_url(type, format: …\n"],["index.json.jbuilder","","app/views/types/index_json_jbuilder.html","","<p>json.array! @types, partial: &#39;types/type&#39;, as: :type\n"],["show.json.jbuilder","","app/views/types/show_json_jbuilder.html","","<p>json.partial! “types/type”, type: @type\n"],["_user.json.jbuilder","","app/views/users/_user_json_jbuilder.html","","<p>json.extract! user, :id, :name, :second_name, :phone, :cni, :ville,\n:password, :created_at, :updated_at …\n"],["index.json.jbuilder","","app/views/users/index_json_jbuilder.html","","<p>json.array! @users, partial: &#39;users/user&#39;, as: :user\n"],["show.json.jbuilder","","app/views/users/show_json_jbuilder.html","","<p>json.partial! “users/user”, user: @user\n"],["config.ru","","config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require_relative &#39;config/environment&#39; …\n"],["credentials.yml.enc","","config/credentials_yml_enc.html","","<p>k8ykldqLIzPq1qp9lA4cyoC/M7hBmoWPDbT1jxCA/wEsmi5+LW+3zs2uwKxWqS9vBkZZ6JnstoTwt9p7/dgAQ6/Mc++UalR5G6elgQTx0Ynye8VbS5w12eG0nT/XEQYGrjsF7+hNc1n9PDpjFL3FqwH/bXu2f/hvPop5NPWJAGQuKtyr5tiqXPNobYGor7WlDW+75BUzv0gN3eaE9HQUbGm+m+v/qc4iLtiD2eAobrscOj/PSB7HfB3vHsYyONHtJTMaabZfKIiU6svtQAEhG/v87+2Ae4ieCkkEnEuBHJCQKTSP2U4AXurc4ArbFf37G39e/Ikc99Ca4qwVV0l2t34yDl1rtrehfRRUsJKedL6CqtKASIsgMvEzfgZLzZx42QvteawLfBVZh4hzxwjxSO3mwhvz3Ovx4RVN–KTBpWGDaeLu1pWnB–4MPRoEMBI/wrxOsg2OSBMA==\n…\n"],["git","","git.html","",""],["scheduler.rake","","lib/tasks/scheduler_rake.html","","<p>desc “This task is called by the Heroku scheduler add-on” task :update_feed\n=&gt; :environment …\n"],["client.log","","log/client_log.html","","<p>Logfile created on 2019-07-31 14:53:48 +0100 by logger.rb/61378\n"],["development.log","","log/development_log.html","","<p>a0341d88-b2fd-4a95-83f9-a23bb304770b &mdash; Started GET “/” for ::1 at 2019-05-24 01:00:38 +0100\n<p>a0341d88-b2fd-4a95-83f9-a23bb304770b … &mdash; "],["lorem.log","","log/lorem_log.html","","<p># Logfile created on 2019-07-29 08:26:31 +0100 by logger.rb/61378 I,\n[2019-07-30T13:07:00.668595 #3425] …\n"],["payment.log","","log/payment_log.html","","<p># Logfile created on 2019-08-01 12:09:51 +0100 by logger.rb/61378 W,\n[2019-08-01T12:09:51.194866 #21323] …\n"],["production.log","","log/production_log.html","",""],["push.log","","log/push_log.html","","<p># Logfile created on 2019-07-05 13:41:54 +0100 by logger.rb/61378 D,\n[2019-07-05T13:41:57.250420 #2007] …\n"],["test.log","","log/test_log.html","",""],["package-lock.json","","package-lock_json.html","","<p>{\n\n<pre>&quot;name&quot;: &quot;pop-cash&quot;,\n&quot;version&quot;: &quot;1.0.0&quot;,\n&quot;lockfileVersion&quot;: 1,\n&quot;requires&quot;: true,\n&quot;dependencies&quot;: {\n  ...</pre>\n"],["package.json","","package_json.html","","<p>{\n\n<pre>&quot;name&quot;: &quot;pop-cash&quot;,\n&quot;private&quot;: true,\n&quot;dependencies&quot;: {\n  &quot;admin-lte&quot;: &quot;^3.0.0-alpha.2&quot;,\n  &quot;foundation-sites&quot;: ...</pre>\n"],["404.html","","public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</pre>\n"],["422.html","","public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</pre>\n"],["500.html","","public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</pre>\n"],["apple-touch-icon-precomposed.png","","public/apple-touch-icon-precomposed_png.html","",""],["apple-touch-icon.png","","public/apple-touch-icon_png.html","",""],["favicon.ico","","public/favicon_ico.html","",""],["robots","","public/robots_txt.html","","<p>See www.robotstxt.org/robotstxt.html for documentation on how to use the\nrobots.txt file\n"],["rake","","rake.html","",""],["report.html","","report_html.html","","<p>&lt;!DOCTYPE HTML SYSTEM&gt; &lt;html&gt; &lt;head&gt; &lt;meta\nhttp-equiv=“Content-Type” content=“text/html; …\n"],["sendgrid.env","","sendgrid_env.html","","<p>export\nSENDGRID_API_KEY=&#39;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&#39;\n…\n"],["development_secret","","tmp/development_secret_txt.html","","<p>65bb06a3b101d7708146667cbb01fc967f0d463bbae0fb1e2fefcfaa17dfe0d44150bcaddbc95ca797c69a5f9627e59a9ab67ff30a2b42276ea00a858fe6d427\n…\n"],["restart","","tmp/restart_txt.html","",""]]}}